
access_levels.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000cc4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a8  08000d84  08000d84  00010d84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e2c  08000e2c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e2c  08000e2c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e2c  08000e2c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e2c  08000e2c  00010e2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e30  08000e30  00010e30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e34  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08000e98  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000e98  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001b03  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000523  00000000  00000000  00021b8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  000220b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e8  00000000  00000000  000221d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002866  00000000  00000000  000222c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000113a  00000000  00000000  00024b26  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000095d1  00000000  00000000  00025c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002f231  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000009dc  00000000  00000000  0002f284  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000064 	.word	0x20000064
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000d6c 	.word	0x08000d6c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000068 	.word	0x20000068
 8000104:	08000d6c 	.word	0x08000d6c

08000108 <generate_interrupt>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
void generate_interrupt()
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
	uint32_t *pSTIR = (uint32_t *)0xE000EF00;
 800010e:	4b08      	ldr	r3, [pc, #32]	; (8000130 <generate_interrupt+0x28>)
 8000110:	607b      	str	r3, [r7, #4]
	uint32_t *pISER0 = (uint32_t *)0xE000E100;
 8000112:	4b08      	ldr	r3, [pc, #32]	; (8000134 <generate_interrupt+0x2c>)
 8000114:	603b      	str	r3, [r7, #0]

	//ENABLE IRQ3 INTERRUPT//
	*pISER0 |= (1<<3);
 8000116:	683b      	ldr	r3, [r7, #0]
 8000118:	681b      	ldr	r3, [r3, #0]
 800011a:	2208      	movs	r2, #8
 800011c:	431a      	orrs	r2, r3
 800011e:	683b      	ldr	r3, [r7, #0]
 8000120:	601a      	str	r2, [r3, #0]

	//GENERATE AN INTERRUPT FROM SW FOR IRQ3
	*pSTIR = (3 & 0x1FF);
 8000122:	687b      	ldr	r3, [r7, #4]
 8000124:	2203      	movs	r2, #3
 8000126:	601a      	str	r2, [r3, #0]

}
 8000128:	46c0      	nop			; (mov r8, r8)
 800012a:	46bd      	mov	sp, r7
 800012c:	b002      	add	sp, #8
 800012e:	bd80      	pop	{r7, pc}
 8000130:	e000ef00 	.word	0xe000ef00
 8000134:	e000e100 	.word	0xe000e100

08000138 <main>:
void change_to_unp()
{

}
int main(void)
{
 8000138:	b580      	push	{r7, lr}
 800013a:	af00      	add	r7, sp, #0
	printf("in thread mode: before interrupt\n");
 800013c:	4b05      	ldr	r3, [pc, #20]	; (8000154 <main+0x1c>)
 800013e:	0018      	movs	r0, r3
 8000140:	f000 f976 	bl	8000430 <puts>
	generate_interrupt();
 8000144:	f7ff ffe0 	bl	8000108 <generate_interrupt>
	printf("in thread mode: after interrupt\n");
 8000148:	4b03      	ldr	r3, [pc, #12]	; (8000158 <main+0x20>)
 800014a:	0018      	movs	r0, r3
 800014c:	f000 f970 	bl	8000430 <puts>
    /* Loop forever */
	for(;;);
 8000150:	e7fe      	b.n	8000150 <main+0x18>
 8000152:	46c0      	nop			; (mov r8, r8)
 8000154:	08000d84 	.word	0x08000d84
 8000158:	08000da8 	.word	0x08000da8

0800015c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800015c:	b580      	push	{r7, lr}
 800015e:	b086      	sub	sp, #24
 8000160:	af00      	add	r7, sp, #0
 8000162:	60f8      	str	r0, [r7, #12]
 8000164:	60b9      	str	r1, [r7, #8]
 8000166:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000168:	2300      	movs	r3, #0
 800016a:	617b      	str	r3, [r7, #20]
 800016c:	e00a      	b.n	8000184 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800016e:	e000      	b.n	8000172 <_read+0x16>
 8000170:	bf00      	nop
 8000172:	0001      	movs	r1, r0
 8000174:	68bb      	ldr	r3, [r7, #8]
 8000176:	1c5a      	adds	r2, r3, #1
 8000178:	60ba      	str	r2, [r7, #8]
 800017a:	b2ca      	uxtb	r2, r1
 800017c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800017e:	697b      	ldr	r3, [r7, #20]
 8000180:	3301      	adds	r3, #1
 8000182:	617b      	str	r3, [r7, #20]
 8000184:	697a      	ldr	r2, [r7, #20]
 8000186:	687b      	ldr	r3, [r7, #4]
 8000188:	429a      	cmp	r2, r3
 800018a:	dbf0      	blt.n	800016e <_read+0x12>
	}

return len;
 800018c:	687b      	ldr	r3, [r7, #4]
}
 800018e:	0018      	movs	r0, r3
 8000190:	46bd      	mov	sp, r7
 8000192:	b006      	add	sp, #24
 8000194:	bd80      	pop	{r7, pc}

08000196 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000196:	b580      	push	{r7, lr}
 8000198:	b086      	sub	sp, #24
 800019a:	af00      	add	r7, sp, #0
 800019c:	60f8      	str	r0, [r7, #12]
 800019e:	60b9      	str	r1, [r7, #8]
 80001a0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001a2:	2300      	movs	r3, #0
 80001a4:	617b      	str	r3, [r7, #20]
 80001a6:	e009      	b.n	80001bc <_write+0x26>
	{
		__io_putchar(*ptr++);
 80001a8:	68bb      	ldr	r3, [r7, #8]
 80001aa:	1c5a      	adds	r2, r3, #1
 80001ac:	60ba      	str	r2, [r7, #8]
 80001ae:	781b      	ldrb	r3, [r3, #0]
 80001b0:	0018      	movs	r0, r3
 80001b2:	e000      	b.n	80001b6 <_write+0x20>
 80001b4:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001b6:	697b      	ldr	r3, [r7, #20]
 80001b8:	3301      	adds	r3, #1
 80001ba:	617b      	str	r3, [r7, #20]
 80001bc:	697a      	ldr	r2, [r7, #20]
 80001be:	687b      	ldr	r3, [r7, #4]
 80001c0:	429a      	cmp	r2, r3
 80001c2:	dbf1      	blt.n	80001a8 <_write+0x12>
	}
	return len;
 80001c4:	687b      	ldr	r3, [r7, #4]
}
 80001c6:	0018      	movs	r0, r3
 80001c8:	46bd      	mov	sp, r7
 80001ca:	b006      	add	sp, #24
 80001cc:	bd80      	pop	{r7, pc}

080001ce <_close>:

int _close(int file)
{
 80001ce:	b580      	push	{r7, lr}
 80001d0:	b082      	sub	sp, #8
 80001d2:	af00      	add	r7, sp, #0
 80001d4:	6078      	str	r0, [r7, #4]
	return -1;
 80001d6:	2301      	movs	r3, #1
 80001d8:	425b      	negs	r3, r3
}
 80001da:	0018      	movs	r0, r3
 80001dc:	46bd      	mov	sp, r7
 80001de:	b002      	add	sp, #8
 80001e0:	bd80      	pop	{r7, pc}

080001e2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80001e2:	b580      	push	{r7, lr}
 80001e4:	b082      	sub	sp, #8
 80001e6:	af00      	add	r7, sp, #0
 80001e8:	6078      	str	r0, [r7, #4]
 80001ea:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80001ec:	683b      	ldr	r3, [r7, #0]
 80001ee:	2280      	movs	r2, #128	; 0x80
 80001f0:	0192      	lsls	r2, r2, #6
 80001f2:	605a      	str	r2, [r3, #4]
	return 0;
 80001f4:	2300      	movs	r3, #0
}
 80001f6:	0018      	movs	r0, r3
 80001f8:	46bd      	mov	sp, r7
 80001fa:	b002      	add	sp, #8
 80001fc:	bd80      	pop	{r7, pc}

080001fe <_isatty>:

int _isatty(int file)
{
 80001fe:	b580      	push	{r7, lr}
 8000200:	b082      	sub	sp, #8
 8000202:	af00      	add	r7, sp, #0
 8000204:	6078      	str	r0, [r7, #4]
	return 1;
 8000206:	2301      	movs	r3, #1
}
 8000208:	0018      	movs	r0, r3
 800020a:	46bd      	mov	sp, r7
 800020c:	b002      	add	sp, #8
 800020e:	bd80      	pop	{r7, pc}

08000210 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000210:	b580      	push	{r7, lr}
 8000212:	b084      	sub	sp, #16
 8000214:	af00      	add	r7, sp, #0
 8000216:	60f8      	str	r0, [r7, #12]
 8000218:	60b9      	str	r1, [r7, #8]
 800021a:	607a      	str	r2, [r7, #4]
	return 0;
 800021c:	2300      	movs	r3, #0
}
 800021e:	0018      	movs	r0, r3
 8000220:	46bd      	mov	sp, r7
 8000222:	b004      	add	sp, #16
 8000224:	bd80      	pop	{r7, pc}
	...

08000228 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	b086      	sub	sp, #24
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000230:	4a14      	ldr	r2, [pc, #80]	; (8000284 <_sbrk+0x5c>)
 8000232:	4b15      	ldr	r3, [pc, #84]	; (8000288 <_sbrk+0x60>)
 8000234:	1ad3      	subs	r3, r2, r3
 8000236:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000238:	697b      	ldr	r3, [r7, #20]
 800023a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800023c:	4b13      	ldr	r3, [pc, #76]	; (800028c <_sbrk+0x64>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	2b00      	cmp	r3, #0
 8000242:	d102      	bne.n	800024a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000244:	4b11      	ldr	r3, [pc, #68]	; (800028c <_sbrk+0x64>)
 8000246:	4a12      	ldr	r2, [pc, #72]	; (8000290 <_sbrk+0x68>)
 8000248:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800024a:	4b10      	ldr	r3, [pc, #64]	; (800028c <_sbrk+0x64>)
 800024c:	681a      	ldr	r2, [r3, #0]
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	18d3      	adds	r3, r2, r3
 8000252:	693a      	ldr	r2, [r7, #16]
 8000254:	429a      	cmp	r2, r3
 8000256:	d207      	bcs.n	8000268 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000258:	f000 f846 	bl	80002e8 <__errno>
 800025c:	0003      	movs	r3, r0
 800025e:	220c      	movs	r2, #12
 8000260:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000262:	2301      	movs	r3, #1
 8000264:	425b      	negs	r3, r3
 8000266:	e009      	b.n	800027c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000268:	4b08      	ldr	r3, [pc, #32]	; (800028c <_sbrk+0x64>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800026e:	4b07      	ldr	r3, [pc, #28]	; (800028c <_sbrk+0x64>)
 8000270:	681a      	ldr	r2, [r3, #0]
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	18d2      	adds	r2, r2, r3
 8000276:	4b05      	ldr	r3, [pc, #20]	; (800028c <_sbrk+0x64>)
 8000278:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800027a:	68fb      	ldr	r3, [r7, #12]
}
 800027c:	0018      	movs	r0, r3
 800027e:	46bd      	mov	sp, r7
 8000280:	b006      	add	sp, #24
 8000282:	bd80      	pop	{r7, pc}
 8000284:	20002000 	.word	0x20002000
 8000288:	00000400 	.word	0x00000400
 800028c:	20000080 	.word	0x20000080
 8000290:	200000a0 	.word	0x200000a0

08000294 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000294:	480d      	ldr	r0, [pc, #52]	; (80002cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000296:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000298:	e000      	b.n	800029c <Reset_Handler+0x8>
 800029a:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800029c:	480c      	ldr	r0, [pc, #48]	; (80002d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800029e:	490d      	ldr	r1, [pc, #52]	; (80002d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a0:	4a0d      	ldr	r2, [pc, #52]	; (80002d8 <LoopForever+0xe>)
  movs r3, #0
 80002a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a4:	e002      	b.n	80002ac <LoopCopyDataInit>

080002a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002aa:	3304      	adds	r3, #4

080002ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b0:	d3f9      	bcc.n	80002a6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b2:	4a0a      	ldr	r2, [pc, #40]	; (80002dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b4:	4c0a      	ldr	r4, [pc, #40]	; (80002e0 <LoopForever+0x16>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b8:	e001      	b.n	80002be <LoopFillZerobss>

080002ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002bc:	3204      	adds	r2, #4

080002be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c0:	d3fb      	bcc.n	80002ba <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c2:	f000 f817 	bl	80002f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002c6:	f7ff ff37 	bl	8000138 <main>

080002ca <LoopForever>:

LoopForever:
    b LoopForever
 80002ca:	e7fe      	b.n	80002ca <LoopForever>
  ldr   r0, =_estack
 80002cc:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80002d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80002d8:	08000e34 	.word	0x08000e34
  ldr r2, =_sbss
 80002dc:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80002e0:	2000009c 	.word	0x2000009c

080002e4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e4:	e7fe      	b.n	80002e4 <ADC_IRQHandler>
	...

080002e8 <__errno>:
 80002e8:	4b01      	ldr	r3, [pc, #4]	; (80002f0 <__errno+0x8>)
 80002ea:	6818      	ldr	r0, [r3, #0]
 80002ec:	4770      	bx	lr
 80002ee:	46c0      	nop			; (mov r8, r8)
 80002f0:	20000000 	.word	0x20000000

080002f4 <__libc_init_array>:
 80002f4:	b570      	push	{r4, r5, r6, lr}
 80002f6:	2600      	movs	r6, #0
 80002f8:	4d0c      	ldr	r5, [pc, #48]	; (800032c <__libc_init_array+0x38>)
 80002fa:	4c0d      	ldr	r4, [pc, #52]	; (8000330 <__libc_init_array+0x3c>)
 80002fc:	1b64      	subs	r4, r4, r5
 80002fe:	10a4      	asrs	r4, r4, #2
 8000300:	42a6      	cmp	r6, r4
 8000302:	d109      	bne.n	8000318 <__libc_init_array+0x24>
 8000304:	2600      	movs	r6, #0
 8000306:	f000 fd31 	bl	8000d6c <_init>
 800030a:	4d0a      	ldr	r5, [pc, #40]	; (8000334 <__libc_init_array+0x40>)
 800030c:	4c0a      	ldr	r4, [pc, #40]	; (8000338 <__libc_init_array+0x44>)
 800030e:	1b64      	subs	r4, r4, r5
 8000310:	10a4      	asrs	r4, r4, #2
 8000312:	42a6      	cmp	r6, r4
 8000314:	d105      	bne.n	8000322 <__libc_init_array+0x2e>
 8000316:	bd70      	pop	{r4, r5, r6, pc}
 8000318:	00b3      	lsls	r3, r6, #2
 800031a:	58eb      	ldr	r3, [r5, r3]
 800031c:	4798      	blx	r3
 800031e:	3601      	adds	r6, #1
 8000320:	e7ee      	b.n	8000300 <__libc_init_array+0xc>
 8000322:	00b3      	lsls	r3, r6, #2
 8000324:	58eb      	ldr	r3, [r5, r3]
 8000326:	4798      	blx	r3
 8000328:	3601      	adds	r6, #1
 800032a:	e7f2      	b.n	8000312 <__libc_init_array+0x1e>
 800032c:	08000e2c 	.word	0x08000e2c
 8000330:	08000e2c 	.word	0x08000e2c
 8000334:	08000e2c 	.word	0x08000e2c
 8000338:	08000e30 	.word	0x08000e30

0800033c <memset>:
 800033c:	0003      	movs	r3, r0
 800033e:	1882      	adds	r2, r0, r2
 8000340:	4293      	cmp	r3, r2
 8000342:	d100      	bne.n	8000346 <memset+0xa>
 8000344:	4770      	bx	lr
 8000346:	7019      	strb	r1, [r3, #0]
 8000348:	3301      	adds	r3, #1
 800034a:	e7f9      	b.n	8000340 <memset+0x4>

0800034c <_puts_r>:
 800034c:	b570      	push	{r4, r5, r6, lr}
 800034e:	0005      	movs	r5, r0
 8000350:	000e      	movs	r6, r1
 8000352:	2800      	cmp	r0, #0
 8000354:	d004      	beq.n	8000360 <_puts_r+0x14>
 8000356:	6983      	ldr	r3, [r0, #24]
 8000358:	2b00      	cmp	r3, #0
 800035a:	d101      	bne.n	8000360 <_puts_r+0x14>
 800035c:	f000 fa6e 	bl	800083c <__sinit>
 8000360:	69ab      	ldr	r3, [r5, #24]
 8000362:	68ac      	ldr	r4, [r5, #8]
 8000364:	2b00      	cmp	r3, #0
 8000366:	d102      	bne.n	800036e <_puts_r+0x22>
 8000368:	0028      	movs	r0, r5
 800036a:	f000 fa67 	bl	800083c <__sinit>
 800036e:	4b2d      	ldr	r3, [pc, #180]	; (8000424 <_puts_r+0xd8>)
 8000370:	429c      	cmp	r4, r3
 8000372:	d122      	bne.n	80003ba <_puts_r+0x6e>
 8000374:	686c      	ldr	r4, [r5, #4]
 8000376:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000378:	07db      	lsls	r3, r3, #31
 800037a:	d405      	bmi.n	8000388 <_puts_r+0x3c>
 800037c:	89a3      	ldrh	r3, [r4, #12]
 800037e:	059b      	lsls	r3, r3, #22
 8000380:	d402      	bmi.n	8000388 <_puts_r+0x3c>
 8000382:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000384:	f000 fafb 	bl	800097e <__retarget_lock_acquire_recursive>
 8000388:	89a3      	ldrh	r3, [r4, #12]
 800038a:	071b      	lsls	r3, r3, #28
 800038c:	d502      	bpl.n	8000394 <_puts_r+0x48>
 800038e:	6923      	ldr	r3, [r4, #16]
 8000390:	2b00      	cmp	r3, #0
 8000392:	d129      	bne.n	80003e8 <_puts_r+0x9c>
 8000394:	0021      	movs	r1, r4
 8000396:	0028      	movs	r0, r5
 8000398:	f000 f8aa 	bl	80004f0 <__swsetup_r>
 800039c:	2800      	cmp	r0, #0
 800039e:	d023      	beq.n	80003e8 <_puts_r+0x9c>
 80003a0:	2501      	movs	r5, #1
 80003a2:	426d      	negs	r5, r5
 80003a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003a6:	07db      	lsls	r3, r3, #31
 80003a8:	d405      	bmi.n	80003b6 <_puts_r+0x6a>
 80003aa:	89a3      	ldrh	r3, [r4, #12]
 80003ac:	059b      	lsls	r3, r3, #22
 80003ae:	d402      	bmi.n	80003b6 <_puts_r+0x6a>
 80003b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003b2:	f000 fae5 	bl	8000980 <__retarget_lock_release_recursive>
 80003b6:	0028      	movs	r0, r5
 80003b8:	bd70      	pop	{r4, r5, r6, pc}
 80003ba:	4b1b      	ldr	r3, [pc, #108]	; (8000428 <_puts_r+0xdc>)
 80003bc:	429c      	cmp	r4, r3
 80003be:	d101      	bne.n	80003c4 <_puts_r+0x78>
 80003c0:	68ac      	ldr	r4, [r5, #8]
 80003c2:	e7d8      	b.n	8000376 <_puts_r+0x2a>
 80003c4:	4b19      	ldr	r3, [pc, #100]	; (800042c <_puts_r+0xe0>)
 80003c6:	429c      	cmp	r4, r3
 80003c8:	d1d5      	bne.n	8000376 <_puts_r+0x2a>
 80003ca:	68ec      	ldr	r4, [r5, #12]
 80003cc:	e7d3      	b.n	8000376 <_puts_r+0x2a>
 80003ce:	3601      	adds	r6, #1
 80003d0:	60a3      	str	r3, [r4, #8]
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	da04      	bge.n	80003e0 <_puts_r+0x94>
 80003d6:	69a2      	ldr	r2, [r4, #24]
 80003d8:	429a      	cmp	r2, r3
 80003da:	dc16      	bgt.n	800040a <_puts_r+0xbe>
 80003dc:	290a      	cmp	r1, #10
 80003de:	d014      	beq.n	800040a <_puts_r+0xbe>
 80003e0:	6823      	ldr	r3, [r4, #0]
 80003e2:	1c5a      	adds	r2, r3, #1
 80003e4:	6022      	str	r2, [r4, #0]
 80003e6:	7019      	strb	r1, [r3, #0]
 80003e8:	68a3      	ldr	r3, [r4, #8]
 80003ea:	7831      	ldrb	r1, [r6, #0]
 80003ec:	3b01      	subs	r3, #1
 80003ee:	2900      	cmp	r1, #0
 80003f0:	d1ed      	bne.n	80003ce <_puts_r+0x82>
 80003f2:	60a3      	str	r3, [r4, #8]
 80003f4:	2b00      	cmp	r3, #0
 80003f6:	da0f      	bge.n	8000418 <_puts_r+0xcc>
 80003f8:	0028      	movs	r0, r5
 80003fa:	0022      	movs	r2, r4
 80003fc:	310a      	adds	r1, #10
 80003fe:	f000 f821 	bl	8000444 <__swbuf_r>
 8000402:	250a      	movs	r5, #10
 8000404:	1c43      	adds	r3, r0, #1
 8000406:	d1cd      	bne.n	80003a4 <_puts_r+0x58>
 8000408:	e7ca      	b.n	80003a0 <_puts_r+0x54>
 800040a:	0022      	movs	r2, r4
 800040c:	0028      	movs	r0, r5
 800040e:	f000 f819 	bl	8000444 <__swbuf_r>
 8000412:	1c43      	adds	r3, r0, #1
 8000414:	d1e8      	bne.n	80003e8 <_puts_r+0x9c>
 8000416:	e7c3      	b.n	80003a0 <_puts_r+0x54>
 8000418:	250a      	movs	r5, #10
 800041a:	6823      	ldr	r3, [r4, #0]
 800041c:	1c5a      	adds	r2, r3, #1
 800041e:	6022      	str	r2, [r4, #0]
 8000420:	701d      	strb	r5, [r3, #0]
 8000422:	e7bf      	b.n	80003a4 <_puts_r+0x58>
 8000424:	08000dec 	.word	0x08000dec
 8000428:	08000e0c 	.word	0x08000e0c
 800042c:	08000dcc 	.word	0x08000dcc

08000430 <puts>:
 8000430:	b510      	push	{r4, lr}
 8000432:	4b03      	ldr	r3, [pc, #12]	; (8000440 <puts+0x10>)
 8000434:	0001      	movs	r1, r0
 8000436:	6818      	ldr	r0, [r3, #0]
 8000438:	f7ff ff88 	bl	800034c <_puts_r>
 800043c:	bd10      	pop	{r4, pc}
 800043e:	46c0      	nop			; (mov r8, r8)
 8000440:	20000000 	.word	0x20000000

08000444 <__swbuf_r>:
 8000444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000446:	0005      	movs	r5, r0
 8000448:	000e      	movs	r6, r1
 800044a:	0014      	movs	r4, r2
 800044c:	2800      	cmp	r0, #0
 800044e:	d004      	beq.n	800045a <__swbuf_r+0x16>
 8000450:	6983      	ldr	r3, [r0, #24]
 8000452:	2b00      	cmp	r3, #0
 8000454:	d101      	bne.n	800045a <__swbuf_r+0x16>
 8000456:	f000 f9f1 	bl	800083c <__sinit>
 800045a:	4b22      	ldr	r3, [pc, #136]	; (80004e4 <__swbuf_r+0xa0>)
 800045c:	429c      	cmp	r4, r3
 800045e:	d12e      	bne.n	80004be <__swbuf_r+0x7a>
 8000460:	686c      	ldr	r4, [r5, #4]
 8000462:	69a3      	ldr	r3, [r4, #24]
 8000464:	60a3      	str	r3, [r4, #8]
 8000466:	89a3      	ldrh	r3, [r4, #12]
 8000468:	071b      	lsls	r3, r3, #28
 800046a:	d532      	bpl.n	80004d2 <__swbuf_r+0x8e>
 800046c:	6923      	ldr	r3, [r4, #16]
 800046e:	2b00      	cmp	r3, #0
 8000470:	d02f      	beq.n	80004d2 <__swbuf_r+0x8e>
 8000472:	6823      	ldr	r3, [r4, #0]
 8000474:	6922      	ldr	r2, [r4, #16]
 8000476:	b2f7      	uxtb	r7, r6
 8000478:	1a98      	subs	r0, r3, r2
 800047a:	6963      	ldr	r3, [r4, #20]
 800047c:	b2f6      	uxtb	r6, r6
 800047e:	4283      	cmp	r3, r0
 8000480:	dc05      	bgt.n	800048e <__swbuf_r+0x4a>
 8000482:	0021      	movs	r1, r4
 8000484:	0028      	movs	r0, r5
 8000486:	f000 f937 	bl	80006f8 <_fflush_r>
 800048a:	2800      	cmp	r0, #0
 800048c:	d127      	bne.n	80004de <__swbuf_r+0x9a>
 800048e:	68a3      	ldr	r3, [r4, #8]
 8000490:	3001      	adds	r0, #1
 8000492:	3b01      	subs	r3, #1
 8000494:	60a3      	str	r3, [r4, #8]
 8000496:	6823      	ldr	r3, [r4, #0]
 8000498:	1c5a      	adds	r2, r3, #1
 800049a:	6022      	str	r2, [r4, #0]
 800049c:	701f      	strb	r7, [r3, #0]
 800049e:	6963      	ldr	r3, [r4, #20]
 80004a0:	4283      	cmp	r3, r0
 80004a2:	d004      	beq.n	80004ae <__swbuf_r+0x6a>
 80004a4:	89a3      	ldrh	r3, [r4, #12]
 80004a6:	07db      	lsls	r3, r3, #31
 80004a8:	d507      	bpl.n	80004ba <__swbuf_r+0x76>
 80004aa:	2e0a      	cmp	r6, #10
 80004ac:	d105      	bne.n	80004ba <__swbuf_r+0x76>
 80004ae:	0021      	movs	r1, r4
 80004b0:	0028      	movs	r0, r5
 80004b2:	f000 f921 	bl	80006f8 <_fflush_r>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d111      	bne.n	80004de <__swbuf_r+0x9a>
 80004ba:	0030      	movs	r0, r6
 80004bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004be:	4b0a      	ldr	r3, [pc, #40]	; (80004e8 <__swbuf_r+0xa4>)
 80004c0:	429c      	cmp	r4, r3
 80004c2:	d101      	bne.n	80004c8 <__swbuf_r+0x84>
 80004c4:	68ac      	ldr	r4, [r5, #8]
 80004c6:	e7cc      	b.n	8000462 <__swbuf_r+0x1e>
 80004c8:	4b08      	ldr	r3, [pc, #32]	; (80004ec <__swbuf_r+0xa8>)
 80004ca:	429c      	cmp	r4, r3
 80004cc:	d1c9      	bne.n	8000462 <__swbuf_r+0x1e>
 80004ce:	68ec      	ldr	r4, [r5, #12]
 80004d0:	e7c7      	b.n	8000462 <__swbuf_r+0x1e>
 80004d2:	0021      	movs	r1, r4
 80004d4:	0028      	movs	r0, r5
 80004d6:	f000 f80b 	bl	80004f0 <__swsetup_r>
 80004da:	2800      	cmp	r0, #0
 80004dc:	d0c9      	beq.n	8000472 <__swbuf_r+0x2e>
 80004de:	2601      	movs	r6, #1
 80004e0:	4276      	negs	r6, r6
 80004e2:	e7ea      	b.n	80004ba <__swbuf_r+0x76>
 80004e4:	08000dec 	.word	0x08000dec
 80004e8:	08000e0c 	.word	0x08000e0c
 80004ec:	08000dcc 	.word	0x08000dcc

080004f0 <__swsetup_r>:
 80004f0:	4b37      	ldr	r3, [pc, #220]	; (80005d0 <__swsetup_r+0xe0>)
 80004f2:	b570      	push	{r4, r5, r6, lr}
 80004f4:	681d      	ldr	r5, [r3, #0]
 80004f6:	0006      	movs	r6, r0
 80004f8:	000c      	movs	r4, r1
 80004fa:	2d00      	cmp	r5, #0
 80004fc:	d005      	beq.n	800050a <__swsetup_r+0x1a>
 80004fe:	69ab      	ldr	r3, [r5, #24]
 8000500:	2b00      	cmp	r3, #0
 8000502:	d102      	bne.n	800050a <__swsetup_r+0x1a>
 8000504:	0028      	movs	r0, r5
 8000506:	f000 f999 	bl	800083c <__sinit>
 800050a:	4b32      	ldr	r3, [pc, #200]	; (80005d4 <__swsetup_r+0xe4>)
 800050c:	429c      	cmp	r4, r3
 800050e:	d10f      	bne.n	8000530 <__swsetup_r+0x40>
 8000510:	686c      	ldr	r4, [r5, #4]
 8000512:	230c      	movs	r3, #12
 8000514:	5ee2      	ldrsh	r2, [r4, r3]
 8000516:	b293      	uxth	r3, r2
 8000518:	0711      	lsls	r1, r2, #28
 800051a:	d42d      	bmi.n	8000578 <__swsetup_r+0x88>
 800051c:	06d9      	lsls	r1, r3, #27
 800051e:	d411      	bmi.n	8000544 <__swsetup_r+0x54>
 8000520:	2309      	movs	r3, #9
 8000522:	2001      	movs	r0, #1
 8000524:	6033      	str	r3, [r6, #0]
 8000526:	3337      	adds	r3, #55	; 0x37
 8000528:	4313      	orrs	r3, r2
 800052a:	81a3      	strh	r3, [r4, #12]
 800052c:	4240      	negs	r0, r0
 800052e:	bd70      	pop	{r4, r5, r6, pc}
 8000530:	4b29      	ldr	r3, [pc, #164]	; (80005d8 <__swsetup_r+0xe8>)
 8000532:	429c      	cmp	r4, r3
 8000534:	d101      	bne.n	800053a <__swsetup_r+0x4a>
 8000536:	68ac      	ldr	r4, [r5, #8]
 8000538:	e7eb      	b.n	8000512 <__swsetup_r+0x22>
 800053a:	4b28      	ldr	r3, [pc, #160]	; (80005dc <__swsetup_r+0xec>)
 800053c:	429c      	cmp	r4, r3
 800053e:	d1e8      	bne.n	8000512 <__swsetup_r+0x22>
 8000540:	68ec      	ldr	r4, [r5, #12]
 8000542:	e7e6      	b.n	8000512 <__swsetup_r+0x22>
 8000544:	075b      	lsls	r3, r3, #29
 8000546:	d513      	bpl.n	8000570 <__swsetup_r+0x80>
 8000548:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800054a:	2900      	cmp	r1, #0
 800054c:	d008      	beq.n	8000560 <__swsetup_r+0x70>
 800054e:	0023      	movs	r3, r4
 8000550:	3344      	adds	r3, #68	; 0x44
 8000552:	4299      	cmp	r1, r3
 8000554:	d002      	beq.n	800055c <__swsetup_r+0x6c>
 8000556:	0030      	movs	r0, r6
 8000558:	f000 fa80 	bl	8000a5c <_free_r>
 800055c:	2300      	movs	r3, #0
 800055e:	6363      	str	r3, [r4, #52]	; 0x34
 8000560:	2224      	movs	r2, #36	; 0x24
 8000562:	89a3      	ldrh	r3, [r4, #12]
 8000564:	4393      	bics	r3, r2
 8000566:	81a3      	strh	r3, [r4, #12]
 8000568:	2300      	movs	r3, #0
 800056a:	6063      	str	r3, [r4, #4]
 800056c:	6923      	ldr	r3, [r4, #16]
 800056e:	6023      	str	r3, [r4, #0]
 8000570:	2308      	movs	r3, #8
 8000572:	89a2      	ldrh	r2, [r4, #12]
 8000574:	4313      	orrs	r3, r2
 8000576:	81a3      	strh	r3, [r4, #12]
 8000578:	6923      	ldr	r3, [r4, #16]
 800057a:	2b00      	cmp	r3, #0
 800057c:	d10b      	bne.n	8000596 <__swsetup_r+0xa6>
 800057e:	21a0      	movs	r1, #160	; 0xa0
 8000580:	2280      	movs	r2, #128	; 0x80
 8000582:	89a3      	ldrh	r3, [r4, #12]
 8000584:	0089      	lsls	r1, r1, #2
 8000586:	0092      	lsls	r2, r2, #2
 8000588:	400b      	ands	r3, r1
 800058a:	4293      	cmp	r3, r2
 800058c:	d003      	beq.n	8000596 <__swsetup_r+0xa6>
 800058e:	0021      	movs	r1, r4
 8000590:	0030      	movs	r0, r6
 8000592:	f000 fa1f 	bl	80009d4 <__smakebuf_r>
 8000596:	220c      	movs	r2, #12
 8000598:	5ea3      	ldrsh	r3, [r4, r2]
 800059a:	2001      	movs	r0, #1
 800059c:	001a      	movs	r2, r3
 800059e:	b299      	uxth	r1, r3
 80005a0:	4002      	ands	r2, r0
 80005a2:	4203      	tst	r3, r0
 80005a4:	d00f      	beq.n	80005c6 <__swsetup_r+0xd6>
 80005a6:	2200      	movs	r2, #0
 80005a8:	60a2      	str	r2, [r4, #8]
 80005aa:	6962      	ldr	r2, [r4, #20]
 80005ac:	4252      	negs	r2, r2
 80005ae:	61a2      	str	r2, [r4, #24]
 80005b0:	2000      	movs	r0, #0
 80005b2:	6922      	ldr	r2, [r4, #16]
 80005b4:	4282      	cmp	r2, r0
 80005b6:	d1ba      	bne.n	800052e <__swsetup_r+0x3e>
 80005b8:	060a      	lsls	r2, r1, #24
 80005ba:	d5b8      	bpl.n	800052e <__swsetup_r+0x3e>
 80005bc:	2240      	movs	r2, #64	; 0x40
 80005be:	4313      	orrs	r3, r2
 80005c0:	81a3      	strh	r3, [r4, #12]
 80005c2:	3801      	subs	r0, #1
 80005c4:	e7b3      	b.n	800052e <__swsetup_r+0x3e>
 80005c6:	0788      	lsls	r0, r1, #30
 80005c8:	d400      	bmi.n	80005cc <__swsetup_r+0xdc>
 80005ca:	6962      	ldr	r2, [r4, #20]
 80005cc:	60a2      	str	r2, [r4, #8]
 80005ce:	e7ef      	b.n	80005b0 <__swsetup_r+0xc0>
 80005d0:	20000000 	.word	0x20000000
 80005d4:	08000dec 	.word	0x08000dec
 80005d8:	08000e0c 	.word	0x08000e0c
 80005dc:	08000dcc 	.word	0x08000dcc

080005e0 <__sflush_r>:
 80005e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80005e2:	898b      	ldrh	r3, [r1, #12]
 80005e4:	0005      	movs	r5, r0
 80005e6:	000c      	movs	r4, r1
 80005e8:	071a      	lsls	r2, r3, #28
 80005ea:	d45f      	bmi.n	80006ac <__sflush_r+0xcc>
 80005ec:	684a      	ldr	r2, [r1, #4]
 80005ee:	2a00      	cmp	r2, #0
 80005f0:	dc04      	bgt.n	80005fc <__sflush_r+0x1c>
 80005f2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80005f4:	2a00      	cmp	r2, #0
 80005f6:	dc01      	bgt.n	80005fc <__sflush_r+0x1c>
 80005f8:	2000      	movs	r0, #0
 80005fa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80005fc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80005fe:	2f00      	cmp	r7, #0
 8000600:	d0fa      	beq.n	80005f8 <__sflush_r+0x18>
 8000602:	2200      	movs	r2, #0
 8000604:	2180      	movs	r1, #128	; 0x80
 8000606:	682e      	ldr	r6, [r5, #0]
 8000608:	602a      	str	r2, [r5, #0]
 800060a:	001a      	movs	r2, r3
 800060c:	0149      	lsls	r1, r1, #5
 800060e:	400a      	ands	r2, r1
 8000610:	420b      	tst	r3, r1
 8000612:	d034      	beq.n	800067e <__sflush_r+0x9e>
 8000614:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000616:	89a3      	ldrh	r3, [r4, #12]
 8000618:	075b      	lsls	r3, r3, #29
 800061a:	d506      	bpl.n	800062a <__sflush_r+0x4a>
 800061c:	6863      	ldr	r3, [r4, #4]
 800061e:	1ac0      	subs	r0, r0, r3
 8000620:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000622:	2b00      	cmp	r3, #0
 8000624:	d001      	beq.n	800062a <__sflush_r+0x4a>
 8000626:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000628:	1ac0      	subs	r0, r0, r3
 800062a:	0002      	movs	r2, r0
 800062c:	6a21      	ldr	r1, [r4, #32]
 800062e:	2300      	movs	r3, #0
 8000630:	0028      	movs	r0, r5
 8000632:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8000634:	47b8      	blx	r7
 8000636:	89a1      	ldrh	r1, [r4, #12]
 8000638:	1c43      	adds	r3, r0, #1
 800063a:	d106      	bne.n	800064a <__sflush_r+0x6a>
 800063c:	682b      	ldr	r3, [r5, #0]
 800063e:	2b1d      	cmp	r3, #29
 8000640:	d831      	bhi.n	80006a6 <__sflush_r+0xc6>
 8000642:	4a2c      	ldr	r2, [pc, #176]	; (80006f4 <__sflush_r+0x114>)
 8000644:	40da      	lsrs	r2, r3
 8000646:	07d3      	lsls	r3, r2, #31
 8000648:	d52d      	bpl.n	80006a6 <__sflush_r+0xc6>
 800064a:	2300      	movs	r3, #0
 800064c:	6063      	str	r3, [r4, #4]
 800064e:	6923      	ldr	r3, [r4, #16]
 8000650:	6023      	str	r3, [r4, #0]
 8000652:	04cb      	lsls	r3, r1, #19
 8000654:	d505      	bpl.n	8000662 <__sflush_r+0x82>
 8000656:	1c43      	adds	r3, r0, #1
 8000658:	d102      	bne.n	8000660 <__sflush_r+0x80>
 800065a:	682b      	ldr	r3, [r5, #0]
 800065c:	2b00      	cmp	r3, #0
 800065e:	d100      	bne.n	8000662 <__sflush_r+0x82>
 8000660:	6560      	str	r0, [r4, #84]	; 0x54
 8000662:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000664:	602e      	str	r6, [r5, #0]
 8000666:	2900      	cmp	r1, #0
 8000668:	d0c6      	beq.n	80005f8 <__sflush_r+0x18>
 800066a:	0023      	movs	r3, r4
 800066c:	3344      	adds	r3, #68	; 0x44
 800066e:	4299      	cmp	r1, r3
 8000670:	d002      	beq.n	8000678 <__sflush_r+0x98>
 8000672:	0028      	movs	r0, r5
 8000674:	f000 f9f2 	bl	8000a5c <_free_r>
 8000678:	2000      	movs	r0, #0
 800067a:	6360      	str	r0, [r4, #52]	; 0x34
 800067c:	e7bd      	b.n	80005fa <__sflush_r+0x1a>
 800067e:	2301      	movs	r3, #1
 8000680:	0028      	movs	r0, r5
 8000682:	6a21      	ldr	r1, [r4, #32]
 8000684:	47b8      	blx	r7
 8000686:	1c43      	adds	r3, r0, #1
 8000688:	d1c5      	bne.n	8000616 <__sflush_r+0x36>
 800068a:	682b      	ldr	r3, [r5, #0]
 800068c:	2b00      	cmp	r3, #0
 800068e:	d0c2      	beq.n	8000616 <__sflush_r+0x36>
 8000690:	2b1d      	cmp	r3, #29
 8000692:	d001      	beq.n	8000698 <__sflush_r+0xb8>
 8000694:	2b16      	cmp	r3, #22
 8000696:	d101      	bne.n	800069c <__sflush_r+0xbc>
 8000698:	602e      	str	r6, [r5, #0]
 800069a:	e7ad      	b.n	80005f8 <__sflush_r+0x18>
 800069c:	2340      	movs	r3, #64	; 0x40
 800069e:	89a2      	ldrh	r2, [r4, #12]
 80006a0:	4313      	orrs	r3, r2
 80006a2:	81a3      	strh	r3, [r4, #12]
 80006a4:	e7a9      	b.n	80005fa <__sflush_r+0x1a>
 80006a6:	2340      	movs	r3, #64	; 0x40
 80006a8:	430b      	orrs	r3, r1
 80006aa:	e7fa      	b.n	80006a2 <__sflush_r+0xc2>
 80006ac:	690f      	ldr	r7, [r1, #16]
 80006ae:	2f00      	cmp	r7, #0
 80006b0:	d0a2      	beq.n	80005f8 <__sflush_r+0x18>
 80006b2:	680a      	ldr	r2, [r1, #0]
 80006b4:	600f      	str	r7, [r1, #0]
 80006b6:	1bd2      	subs	r2, r2, r7
 80006b8:	9201      	str	r2, [sp, #4]
 80006ba:	2200      	movs	r2, #0
 80006bc:	079b      	lsls	r3, r3, #30
 80006be:	d100      	bne.n	80006c2 <__sflush_r+0xe2>
 80006c0:	694a      	ldr	r2, [r1, #20]
 80006c2:	60a2      	str	r2, [r4, #8]
 80006c4:	9b01      	ldr	r3, [sp, #4]
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	dc00      	bgt.n	80006cc <__sflush_r+0xec>
 80006ca:	e795      	b.n	80005f8 <__sflush_r+0x18>
 80006cc:	003a      	movs	r2, r7
 80006ce:	0028      	movs	r0, r5
 80006d0:	9b01      	ldr	r3, [sp, #4]
 80006d2:	6a21      	ldr	r1, [r4, #32]
 80006d4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80006d6:	47b0      	blx	r6
 80006d8:	2800      	cmp	r0, #0
 80006da:	dc06      	bgt.n	80006ea <__sflush_r+0x10a>
 80006dc:	2340      	movs	r3, #64	; 0x40
 80006de:	2001      	movs	r0, #1
 80006e0:	89a2      	ldrh	r2, [r4, #12]
 80006e2:	4240      	negs	r0, r0
 80006e4:	4313      	orrs	r3, r2
 80006e6:	81a3      	strh	r3, [r4, #12]
 80006e8:	e787      	b.n	80005fa <__sflush_r+0x1a>
 80006ea:	9b01      	ldr	r3, [sp, #4]
 80006ec:	183f      	adds	r7, r7, r0
 80006ee:	1a1b      	subs	r3, r3, r0
 80006f0:	9301      	str	r3, [sp, #4]
 80006f2:	e7e7      	b.n	80006c4 <__sflush_r+0xe4>
 80006f4:	20400001 	.word	0x20400001

080006f8 <_fflush_r>:
 80006f8:	690b      	ldr	r3, [r1, #16]
 80006fa:	b570      	push	{r4, r5, r6, lr}
 80006fc:	0005      	movs	r5, r0
 80006fe:	000c      	movs	r4, r1
 8000700:	2b00      	cmp	r3, #0
 8000702:	d102      	bne.n	800070a <_fflush_r+0x12>
 8000704:	2500      	movs	r5, #0
 8000706:	0028      	movs	r0, r5
 8000708:	bd70      	pop	{r4, r5, r6, pc}
 800070a:	2800      	cmp	r0, #0
 800070c:	d004      	beq.n	8000718 <_fflush_r+0x20>
 800070e:	6983      	ldr	r3, [r0, #24]
 8000710:	2b00      	cmp	r3, #0
 8000712:	d101      	bne.n	8000718 <_fflush_r+0x20>
 8000714:	f000 f892 	bl	800083c <__sinit>
 8000718:	4b14      	ldr	r3, [pc, #80]	; (800076c <_fflush_r+0x74>)
 800071a:	429c      	cmp	r4, r3
 800071c:	d11b      	bne.n	8000756 <_fflush_r+0x5e>
 800071e:	686c      	ldr	r4, [r5, #4]
 8000720:	220c      	movs	r2, #12
 8000722:	5ea3      	ldrsh	r3, [r4, r2]
 8000724:	2b00      	cmp	r3, #0
 8000726:	d0ed      	beq.n	8000704 <_fflush_r+0xc>
 8000728:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800072a:	07d2      	lsls	r2, r2, #31
 800072c:	d404      	bmi.n	8000738 <_fflush_r+0x40>
 800072e:	059b      	lsls	r3, r3, #22
 8000730:	d402      	bmi.n	8000738 <_fflush_r+0x40>
 8000732:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000734:	f000 f923 	bl	800097e <__retarget_lock_acquire_recursive>
 8000738:	0028      	movs	r0, r5
 800073a:	0021      	movs	r1, r4
 800073c:	f7ff ff50 	bl	80005e0 <__sflush_r>
 8000740:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000742:	0005      	movs	r5, r0
 8000744:	07db      	lsls	r3, r3, #31
 8000746:	d4de      	bmi.n	8000706 <_fflush_r+0xe>
 8000748:	89a3      	ldrh	r3, [r4, #12]
 800074a:	059b      	lsls	r3, r3, #22
 800074c:	d4db      	bmi.n	8000706 <_fflush_r+0xe>
 800074e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000750:	f000 f916 	bl	8000980 <__retarget_lock_release_recursive>
 8000754:	e7d7      	b.n	8000706 <_fflush_r+0xe>
 8000756:	4b06      	ldr	r3, [pc, #24]	; (8000770 <_fflush_r+0x78>)
 8000758:	429c      	cmp	r4, r3
 800075a:	d101      	bne.n	8000760 <_fflush_r+0x68>
 800075c:	68ac      	ldr	r4, [r5, #8]
 800075e:	e7df      	b.n	8000720 <_fflush_r+0x28>
 8000760:	4b04      	ldr	r3, [pc, #16]	; (8000774 <_fflush_r+0x7c>)
 8000762:	429c      	cmp	r4, r3
 8000764:	d1dc      	bne.n	8000720 <_fflush_r+0x28>
 8000766:	68ec      	ldr	r4, [r5, #12]
 8000768:	e7da      	b.n	8000720 <_fflush_r+0x28>
 800076a:	46c0      	nop			; (mov r8, r8)
 800076c:	08000dec 	.word	0x08000dec
 8000770:	08000e0c 	.word	0x08000e0c
 8000774:	08000dcc 	.word	0x08000dcc

08000778 <std>:
 8000778:	2300      	movs	r3, #0
 800077a:	b510      	push	{r4, lr}
 800077c:	0004      	movs	r4, r0
 800077e:	6003      	str	r3, [r0, #0]
 8000780:	6043      	str	r3, [r0, #4]
 8000782:	6083      	str	r3, [r0, #8]
 8000784:	8181      	strh	r1, [r0, #12]
 8000786:	6643      	str	r3, [r0, #100]	; 0x64
 8000788:	0019      	movs	r1, r3
 800078a:	81c2      	strh	r2, [r0, #14]
 800078c:	6103      	str	r3, [r0, #16]
 800078e:	6143      	str	r3, [r0, #20]
 8000790:	6183      	str	r3, [r0, #24]
 8000792:	2208      	movs	r2, #8
 8000794:	305c      	adds	r0, #92	; 0x5c
 8000796:	f7ff fdd1 	bl	800033c <memset>
 800079a:	4b05      	ldr	r3, [pc, #20]	; (80007b0 <std+0x38>)
 800079c:	6263      	str	r3, [r4, #36]	; 0x24
 800079e:	4b05      	ldr	r3, [pc, #20]	; (80007b4 <std+0x3c>)
 80007a0:	6224      	str	r4, [r4, #32]
 80007a2:	62a3      	str	r3, [r4, #40]	; 0x28
 80007a4:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <std+0x40>)
 80007a6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007a8:	4b04      	ldr	r3, [pc, #16]	; (80007bc <std+0x44>)
 80007aa:	6323      	str	r3, [r4, #48]	; 0x30
 80007ac:	bd10      	pop	{r4, pc}
 80007ae:	46c0      	nop			; (mov r8, r8)
 80007b0:	08000bd1 	.word	0x08000bd1
 80007b4:	08000bf9 	.word	0x08000bf9
 80007b8:	08000c31 	.word	0x08000c31
 80007bc:	08000c5d 	.word	0x08000c5d

080007c0 <_cleanup_r>:
 80007c0:	b510      	push	{r4, lr}
 80007c2:	4902      	ldr	r1, [pc, #8]	; (80007cc <_cleanup_r+0xc>)
 80007c4:	f000 f8ba 	bl	800093c <_fwalk_reent>
 80007c8:	bd10      	pop	{r4, pc}
 80007ca:	46c0      	nop			; (mov r8, r8)
 80007cc:	080006f9 	.word	0x080006f9

080007d0 <__sfmoreglue>:
 80007d0:	b570      	push	{r4, r5, r6, lr}
 80007d2:	2568      	movs	r5, #104	; 0x68
 80007d4:	1e4a      	subs	r2, r1, #1
 80007d6:	4355      	muls	r5, r2
 80007d8:	000e      	movs	r6, r1
 80007da:	0029      	movs	r1, r5
 80007dc:	3174      	adds	r1, #116	; 0x74
 80007de:	f000 f987 	bl	8000af0 <_malloc_r>
 80007e2:	1e04      	subs	r4, r0, #0
 80007e4:	d008      	beq.n	80007f8 <__sfmoreglue+0x28>
 80007e6:	2100      	movs	r1, #0
 80007e8:	002a      	movs	r2, r5
 80007ea:	6001      	str	r1, [r0, #0]
 80007ec:	6046      	str	r6, [r0, #4]
 80007ee:	300c      	adds	r0, #12
 80007f0:	60a0      	str	r0, [r4, #8]
 80007f2:	3268      	adds	r2, #104	; 0x68
 80007f4:	f7ff fda2 	bl	800033c <memset>
 80007f8:	0020      	movs	r0, r4
 80007fa:	bd70      	pop	{r4, r5, r6, pc}

080007fc <__sfp_lock_acquire>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	4802      	ldr	r0, [pc, #8]	; (8000808 <__sfp_lock_acquire+0xc>)
 8000800:	f000 f8bd 	bl	800097e <__retarget_lock_acquire_recursive>
 8000804:	bd10      	pop	{r4, pc}
 8000806:	46c0      	nop			; (mov r8, r8)
 8000808:	20000094 	.word	0x20000094

0800080c <__sfp_lock_release>:
 800080c:	b510      	push	{r4, lr}
 800080e:	4802      	ldr	r0, [pc, #8]	; (8000818 <__sfp_lock_release+0xc>)
 8000810:	f000 f8b6 	bl	8000980 <__retarget_lock_release_recursive>
 8000814:	bd10      	pop	{r4, pc}
 8000816:	46c0      	nop			; (mov r8, r8)
 8000818:	20000094 	.word	0x20000094

0800081c <__sinit_lock_acquire>:
 800081c:	b510      	push	{r4, lr}
 800081e:	4802      	ldr	r0, [pc, #8]	; (8000828 <__sinit_lock_acquire+0xc>)
 8000820:	f000 f8ad 	bl	800097e <__retarget_lock_acquire_recursive>
 8000824:	bd10      	pop	{r4, pc}
 8000826:	46c0      	nop			; (mov r8, r8)
 8000828:	2000008f 	.word	0x2000008f

0800082c <__sinit_lock_release>:
 800082c:	b510      	push	{r4, lr}
 800082e:	4802      	ldr	r0, [pc, #8]	; (8000838 <__sinit_lock_release+0xc>)
 8000830:	f000 f8a6 	bl	8000980 <__retarget_lock_release_recursive>
 8000834:	bd10      	pop	{r4, pc}
 8000836:	46c0      	nop			; (mov r8, r8)
 8000838:	2000008f 	.word	0x2000008f

0800083c <__sinit>:
 800083c:	b513      	push	{r0, r1, r4, lr}
 800083e:	0004      	movs	r4, r0
 8000840:	f7ff ffec 	bl	800081c <__sinit_lock_acquire>
 8000844:	69a3      	ldr	r3, [r4, #24]
 8000846:	2b00      	cmp	r3, #0
 8000848:	d002      	beq.n	8000850 <__sinit+0x14>
 800084a:	f7ff ffef 	bl	800082c <__sinit_lock_release>
 800084e:	bd13      	pop	{r0, r1, r4, pc}
 8000850:	64a3      	str	r3, [r4, #72]	; 0x48
 8000852:	64e3      	str	r3, [r4, #76]	; 0x4c
 8000854:	6523      	str	r3, [r4, #80]	; 0x50
 8000856:	4b13      	ldr	r3, [pc, #76]	; (80008a4 <__sinit+0x68>)
 8000858:	4a13      	ldr	r2, [pc, #76]	; (80008a8 <__sinit+0x6c>)
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	62a2      	str	r2, [r4, #40]	; 0x28
 800085e:	9301      	str	r3, [sp, #4]
 8000860:	42a3      	cmp	r3, r4
 8000862:	d101      	bne.n	8000868 <__sinit+0x2c>
 8000864:	2301      	movs	r3, #1
 8000866:	61a3      	str	r3, [r4, #24]
 8000868:	0020      	movs	r0, r4
 800086a:	f000 f81f 	bl	80008ac <__sfp>
 800086e:	6060      	str	r0, [r4, #4]
 8000870:	0020      	movs	r0, r4
 8000872:	f000 f81b 	bl	80008ac <__sfp>
 8000876:	60a0      	str	r0, [r4, #8]
 8000878:	0020      	movs	r0, r4
 800087a:	f000 f817 	bl	80008ac <__sfp>
 800087e:	2200      	movs	r2, #0
 8000880:	2104      	movs	r1, #4
 8000882:	60e0      	str	r0, [r4, #12]
 8000884:	6860      	ldr	r0, [r4, #4]
 8000886:	f7ff ff77 	bl	8000778 <std>
 800088a:	2201      	movs	r2, #1
 800088c:	2109      	movs	r1, #9
 800088e:	68a0      	ldr	r0, [r4, #8]
 8000890:	f7ff ff72 	bl	8000778 <std>
 8000894:	2202      	movs	r2, #2
 8000896:	2112      	movs	r1, #18
 8000898:	68e0      	ldr	r0, [r4, #12]
 800089a:	f7ff ff6d 	bl	8000778 <std>
 800089e:	2301      	movs	r3, #1
 80008a0:	61a3      	str	r3, [r4, #24]
 80008a2:	e7d2      	b.n	800084a <__sinit+0xe>
 80008a4:	08000dc8 	.word	0x08000dc8
 80008a8:	080007c1 	.word	0x080007c1

080008ac <__sfp>:
 80008ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ae:	0007      	movs	r7, r0
 80008b0:	f7ff ffa4 	bl	80007fc <__sfp_lock_acquire>
 80008b4:	4b1f      	ldr	r3, [pc, #124]	; (8000934 <__sfp+0x88>)
 80008b6:	681e      	ldr	r6, [r3, #0]
 80008b8:	69b3      	ldr	r3, [r6, #24]
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	d102      	bne.n	80008c4 <__sfp+0x18>
 80008be:	0030      	movs	r0, r6
 80008c0:	f7ff ffbc 	bl	800083c <__sinit>
 80008c4:	3648      	adds	r6, #72	; 0x48
 80008c6:	68b4      	ldr	r4, [r6, #8]
 80008c8:	6873      	ldr	r3, [r6, #4]
 80008ca:	3b01      	subs	r3, #1
 80008cc:	d504      	bpl.n	80008d8 <__sfp+0x2c>
 80008ce:	6833      	ldr	r3, [r6, #0]
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d022      	beq.n	800091a <__sfp+0x6e>
 80008d4:	6836      	ldr	r6, [r6, #0]
 80008d6:	e7f6      	b.n	80008c6 <__sfp+0x1a>
 80008d8:	220c      	movs	r2, #12
 80008da:	5ea5      	ldrsh	r5, [r4, r2]
 80008dc:	2d00      	cmp	r5, #0
 80008de:	d11a      	bne.n	8000916 <__sfp+0x6a>
 80008e0:	0020      	movs	r0, r4
 80008e2:	4b15      	ldr	r3, [pc, #84]	; (8000938 <__sfp+0x8c>)
 80008e4:	3058      	adds	r0, #88	; 0x58
 80008e6:	60e3      	str	r3, [r4, #12]
 80008e8:	6665      	str	r5, [r4, #100]	; 0x64
 80008ea:	f000 f847 	bl	800097c <__retarget_lock_init_recursive>
 80008ee:	f7ff ff8d 	bl	800080c <__sfp_lock_release>
 80008f2:	0020      	movs	r0, r4
 80008f4:	2208      	movs	r2, #8
 80008f6:	0029      	movs	r1, r5
 80008f8:	6025      	str	r5, [r4, #0]
 80008fa:	60a5      	str	r5, [r4, #8]
 80008fc:	6065      	str	r5, [r4, #4]
 80008fe:	6125      	str	r5, [r4, #16]
 8000900:	6165      	str	r5, [r4, #20]
 8000902:	61a5      	str	r5, [r4, #24]
 8000904:	305c      	adds	r0, #92	; 0x5c
 8000906:	f7ff fd19 	bl	800033c <memset>
 800090a:	6365      	str	r5, [r4, #52]	; 0x34
 800090c:	63a5      	str	r5, [r4, #56]	; 0x38
 800090e:	64a5      	str	r5, [r4, #72]	; 0x48
 8000910:	64e5      	str	r5, [r4, #76]	; 0x4c
 8000912:	0020      	movs	r0, r4
 8000914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000916:	3468      	adds	r4, #104	; 0x68
 8000918:	e7d7      	b.n	80008ca <__sfp+0x1e>
 800091a:	2104      	movs	r1, #4
 800091c:	0038      	movs	r0, r7
 800091e:	f7ff ff57 	bl	80007d0 <__sfmoreglue>
 8000922:	1e04      	subs	r4, r0, #0
 8000924:	6030      	str	r0, [r6, #0]
 8000926:	d1d5      	bne.n	80008d4 <__sfp+0x28>
 8000928:	f7ff ff70 	bl	800080c <__sfp_lock_release>
 800092c:	230c      	movs	r3, #12
 800092e:	603b      	str	r3, [r7, #0]
 8000930:	e7ef      	b.n	8000912 <__sfp+0x66>
 8000932:	46c0      	nop			; (mov r8, r8)
 8000934:	08000dc8 	.word	0x08000dc8
 8000938:	ffff0001 	.word	0xffff0001

0800093c <_fwalk_reent>:
 800093c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800093e:	0004      	movs	r4, r0
 8000940:	0006      	movs	r6, r0
 8000942:	2700      	movs	r7, #0
 8000944:	9101      	str	r1, [sp, #4]
 8000946:	3448      	adds	r4, #72	; 0x48
 8000948:	6863      	ldr	r3, [r4, #4]
 800094a:	68a5      	ldr	r5, [r4, #8]
 800094c:	9300      	str	r3, [sp, #0]
 800094e:	9b00      	ldr	r3, [sp, #0]
 8000950:	3b01      	subs	r3, #1
 8000952:	9300      	str	r3, [sp, #0]
 8000954:	d504      	bpl.n	8000960 <_fwalk_reent+0x24>
 8000956:	6824      	ldr	r4, [r4, #0]
 8000958:	2c00      	cmp	r4, #0
 800095a:	d1f5      	bne.n	8000948 <_fwalk_reent+0xc>
 800095c:	0038      	movs	r0, r7
 800095e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000960:	89ab      	ldrh	r3, [r5, #12]
 8000962:	2b01      	cmp	r3, #1
 8000964:	d908      	bls.n	8000978 <_fwalk_reent+0x3c>
 8000966:	220e      	movs	r2, #14
 8000968:	5eab      	ldrsh	r3, [r5, r2]
 800096a:	3301      	adds	r3, #1
 800096c:	d004      	beq.n	8000978 <_fwalk_reent+0x3c>
 800096e:	0029      	movs	r1, r5
 8000970:	0030      	movs	r0, r6
 8000972:	9b01      	ldr	r3, [sp, #4]
 8000974:	4798      	blx	r3
 8000976:	4307      	orrs	r7, r0
 8000978:	3568      	adds	r5, #104	; 0x68
 800097a:	e7e8      	b.n	800094e <_fwalk_reent+0x12>

0800097c <__retarget_lock_init_recursive>:
 800097c:	4770      	bx	lr

0800097e <__retarget_lock_acquire_recursive>:
 800097e:	4770      	bx	lr

08000980 <__retarget_lock_release_recursive>:
 8000980:	4770      	bx	lr
	...

08000984 <__swhatbuf_r>:
 8000984:	b570      	push	{r4, r5, r6, lr}
 8000986:	000e      	movs	r6, r1
 8000988:	001d      	movs	r5, r3
 800098a:	230e      	movs	r3, #14
 800098c:	5ec9      	ldrsh	r1, [r1, r3]
 800098e:	0014      	movs	r4, r2
 8000990:	b096      	sub	sp, #88	; 0x58
 8000992:	2900      	cmp	r1, #0
 8000994:	da07      	bge.n	80009a6 <__swhatbuf_r+0x22>
 8000996:	2300      	movs	r3, #0
 8000998:	602b      	str	r3, [r5, #0]
 800099a:	89b3      	ldrh	r3, [r6, #12]
 800099c:	061b      	lsls	r3, r3, #24
 800099e:	d411      	bmi.n	80009c4 <__swhatbuf_r+0x40>
 80009a0:	2380      	movs	r3, #128	; 0x80
 80009a2:	00db      	lsls	r3, r3, #3
 80009a4:	e00f      	b.n	80009c6 <__swhatbuf_r+0x42>
 80009a6:	466a      	mov	r2, sp
 80009a8:	f000 f984 	bl	8000cb4 <_fstat_r>
 80009ac:	2800      	cmp	r0, #0
 80009ae:	dbf2      	blt.n	8000996 <__swhatbuf_r+0x12>
 80009b0:	23f0      	movs	r3, #240	; 0xf0
 80009b2:	9901      	ldr	r1, [sp, #4]
 80009b4:	021b      	lsls	r3, r3, #8
 80009b6:	4019      	ands	r1, r3
 80009b8:	4b05      	ldr	r3, [pc, #20]	; (80009d0 <__swhatbuf_r+0x4c>)
 80009ba:	18c9      	adds	r1, r1, r3
 80009bc:	424b      	negs	r3, r1
 80009be:	4159      	adcs	r1, r3
 80009c0:	6029      	str	r1, [r5, #0]
 80009c2:	e7ed      	b.n	80009a0 <__swhatbuf_r+0x1c>
 80009c4:	2340      	movs	r3, #64	; 0x40
 80009c6:	2000      	movs	r0, #0
 80009c8:	6023      	str	r3, [r4, #0]
 80009ca:	b016      	add	sp, #88	; 0x58
 80009cc:	bd70      	pop	{r4, r5, r6, pc}
 80009ce:	46c0      	nop			; (mov r8, r8)
 80009d0:	ffffe000 	.word	0xffffe000

080009d4 <__smakebuf_r>:
 80009d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80009d6:	2602      	movs	r6, #2
 80009d8:	898b      	ldrh	r3, [r1, #12]
 80009da:	0005      	movs	r5, r0
 80009dc:	000c      	movs	r4, r1
 80009de:	4233      	tst	r3, r6
 80009e0:	d006      	beq.n	80009f0 <__smakebuf_r+0x1c>
 80009e2:	0023      	movs	r3, r4
 80009e4:	3347      	adds	r3, #71	; 0x47
 80009e6:	6023      	str	r3, [r4, #0]
 80009e8:	6123      	str	r3, [r4, #16]
 80009ea:	2301      	movs	r3, #1
 80009ec:	6163      	str	r3, [r4, #20]
 80009ee:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80009f0:	466a      	mov	r2, sp
 80009f2:	ab01      	add	r3, sp, #4
 80009f4:	f7ff ffc6 	bl	8000984 <__swhatbuf_r>
 80009f8:	9900      	ldr	r1, [sp, #0]
 80009fa:	0007      	movs	r7, r0
 80009fc:	0028      	movs	r0, r5
 80009fe:	f000 f877 	bl	8000af0 <_malloc_r>
 8000a02:	2800      	cmp	r0, #0
 8000a04:	d108      	bne.n	8000a18 <__smakebuf_r+0x44>
 8000a06:	220c      	movs	r2, #12
 8000a08:	5ea3      	ldrsh	r3, [r4, r2]
 8000a0a:	059a      	lsls	r2, r3, #22
 8000a0c:	d4ef      	bmi.n	80009ee <__smakebuf_r+0x1a>
 8000a0e:	2203      	movs	r2, #3
 8000a10:	4393      	bics	r3, r2
 8000a12:	431e      	orrs	r6, r3
 8000a14:	81a6      	strh	r6, [r4, #12]
 8000a16:	e7e4      	b.n	80009e2 <__smakebuf_r+0xe>
 8000a18:	4b0f      	ldr	r3, [pc, #60]	; (8000a58 <__smakebuf_r+0x84>)
 8000a1a:	62ab      	str	r3, [r5, #40]	; 0x28
 8000a1c:	2380      	movs	r3, #128	; 0x80
 8000a1e:	89a2      	ldrh	r2, [r4, #12]
 8000a20:	6020      	str	r0, [r4, #0]
 8000a22:	4313      	orrs	r3, r2
 8000a24:	81a3      	strh	r3, [r4, #12]
 8000a26:	9b00      	ldr	r3, [sp, #0]
 8000a28:	6120      	str	r0, [r4, #16]
 8000a2a:	6163      	str	r3, [r4, #20]
 8000a2c:	9b01      	ldr	r3, [sp, #4]
 8000a2e:	2b00      	cmp	r3, #0
 8000a30:	d00d      	beq.n	8000a4e <__smakebuf_r+0x7a>
 8000a32:	0028      	movs	r0, r5
 8000a34:	230e      	movs	r3, #14
 8000a36:	5ee1      	ldrsh	r1, [r4, r3]
 8000a38:	f000 f94e 	bl	8000cd8 <_isatty_r>
 8000a3c:	2800      	cmp	r0, #0
 8000a3e:	d006      	beq.n	8000a4e <__smakebuf_r+0x7a>
 8000a40:	2203      	movs	r2, #3
 8000a42:	89a3      	ldrh	r3, [r4, #12]
 8000a44:	4393      	bics	r3, r2
 8000a46:	001a      	movs	r2, r3
 8000a48:	2301      	movs	r3, #1
 8000a4a:	4313      	orrs	r3, r2
 8000a4c:	81a3      	strh	r3, [r4, #12]
 8000a4e:	89a0      	ldrh	r0, [r4, #12]
 8000a50:	4307      	orrs	r7, r0
 8000a52:	81a7      	strh	r7, [r4, #12]
 8000a54:	e7cb      	b.n	80009ee <__smakebuf_r+0x1a>
 8000a56:	46c0      	nop			; (mov r8, r8)
 8000a58:	080007c1 	.word	0x080007c1

08000a5c <_free_r>:
 8000a5c:	b570      	push	{r4, r5, r6, lr}
 8000a5e:	0005      	movs	r5, r0
 8000a60:	2900      	cmp	r1, #0
 8000a62:	d010      	beq.n	8000a86 <_free_r+0x2a>
 8000a64:	1f0c      	subs	r4, r1, #4
 8000a66:	6823      	ldr	r3, [r4, #0]
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	da00      	bge.n	8000a6e <_free_r+0x12>
 8000a6c:	18e4      	adds	r4, r4, r3
 8000a6e:	0028      	movs	r0, r5
 8000a70:	f000 f958 	bl	8000d24 <__malloc_lock>
 8000a74:	4a1d      	ldr	r2, [pc, #116]	; (8000aec <_free_r+0x90>)
 8000a76:	6813      	ldr	r3, [r2, #0]
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	d105      	bne.n	8000a88 <_free_r+0x2c>
 8000a7c:	6063      	str	r3, [r4, #4]
 8000a7e:	6014      	str	r4, [r2, #0]
 8000a80:	0028      	movs	r0, r5
 8000a82:	f000 f957 	bl	8000d34 <__malloc_unlock>
 8000a86:	bd70      	pop	{r4, r5, r6, pc}
 8000a88:	42a3      	cmp	r3, r4
 8000a8a:	d908      	bls.n	8000a9e <_free_r+0x42>
 8000a8c:	6821      	ldr	r1, [r4, #0]
 8000a8e:	1860      	adds	r0, r4, r1
 8000a90:	4283      	cmp	r3, r0
 8000a92:	d1f3      	bne.n	8000a7c <_free_r+0x20>
 8000a94:	6818      	ldr	r0, [r3, #0]
 8000a96:	685b      	ldr	r3, [r3, #4]
 8000a98:	1841      	adds	r1, r0, r1
 8000a9a:	6021      	str	r1, [r4, #0]
 8000a9c:	e7ee      	b.n	8000a7c <_free_r+0x20>
 8000a9e:	001a      	movs	r2, r3
 8000aa0:	685b      	ldr	r3, [r3, #4]
 8000aa2:	2b00      	cmp	r3, #0
 8000aa4:	d001      	beq.n	8000aaa <_free_r+0x4e>
 8000aa6:	42a3      	cmp	r3, r4
 8000aa8:	d9f9      	bls.n	8000a9e <_free_r+0x42>
 8000aaa:	6811      	ldr	r1, [r2, #0]
 8000aac:	1850      	adds	r0, r2, r1
 8000aae:	42a0      	cmp	r0, r4
 8000ab0:	d10b      	bne.n	8000aca <_free_r+0x6e>
 8000ab2:	6820      	ldr	r0, [r4, #0]
 8000ab4:	1809      	adds	r1, r1, r0
 8000ab6:	1850      	adds	r0, r2, r1
 8000ab8:	6011      	str	r1, [r2, #0]
 8000aba:	4283      	cmp	r3, r0
 8000abc:	d1e0      	bne.n	8000a80 <_free_r+0x24>
 8000abe:	6818      	ldr	r0, [r3, #0]
 8000ac0:	685b      	ldr	r3, [r3, #4]
 8000ac2:	1841      	adds	r1, r0, r1
 8000ac4:	6011      	str	r1, [r2, #0]
 8000ac6:	6053      	str	r3, [r2, #4]
 8000ac8:	e7da      	b.n	8000a80 <_free_r+0x24>
 8000aca:	42a0      	cmp	r0, r4
 8000acc:	d902      	bls.n	8000ad4 <_free_r+0x78>
 8000ace:	230c      	movs	r3, #12
 8000ad0:	602b      	str	r3, [r5, #0]
 8000ad2:	e7d5      	b.n	8000a80 <_free_r+0x24>
 8000ad4:	6821      	ldr	r1, [r4, #0]
 8000ad6:	1860      	adds	r0, r4, r1
 8000ad8:	4283      	cmp	r3, r0
 8000ada:	d103      	bne.n	8000ae4 <_free_r+0x88>
 8000adc:	6818      	ldr	r0, [r3, #0]
 8000ade:	685b      	ldr	r3, [r3, #4]
 8000ae0:	1841      	adds	r1, r0, r1
 8000ae2:	6021      	str	r1, [r4, #0]
 8000ae4:	6063      	str	r3, [r4, #4]
 8000ae6:	6054      	str	r4, [r2, #4]
 8000ae8:	e7ca      	b.n	8000a80 <_free_r+0x24>
 8000aea:	46c0      	nop			; (mov r8, r8)
 8000aec:	20000084 	.word	0x20000084

08000af0 <_malloc_r>:
 8000af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000af2:	2303      	movs	r3, #3
 8000af4:	1ccd      	adds	r5, r1, #3
 8000af6:	439d      	bics	r5, r3
 8000af8:	3508      	adds	r5, #8
 8000afa:	0006      	movs	r6, r0
 8000afc:	2d0c      	cmp	r5, #12
 8000afe:	d21f      	bcs.n	8000b40 <_malloc_r+0x50>
 8000b00:	250c      	movs	r5, #12
 8000b02:	42a9      	cmp	r1, r5
 8000b04:	d81e      	bhi.n	8000b44 <_malloc_r+0x54>
 8000b06:	0030      	movs	r0, r6
 8000b08:	f000 f90c 	bl	8000d24 <__malloc_lock>
 8000b0c:	4925      	ldr	r1, [pc, #148]	; (8000ba4 <_malloc_r+0xb4>)
 8000b0e:	680a      	ldr	r2, [r1, #0]
 8000b10:	0014      	movs	r4, r2
 8000b12:	2c00      	cmp	r4, #0
 8000b14:	d11a      	bne.n	8000b4c <_malloc_r+0x5c>
 8000b16:	4f24      	ldr	r7, [pc, #144]	; (8000ba8 <_malloc_r+0xb8>)
 8000b18:	683b      	ldr	r3, [r7, #0]
 8000b1a:	2b00      	cmp	r3, #0
 8000b1c:	d104      	bne.n	8000b28 <_malloc_r+0x38>
 8000b1e:	0021      	movs	r1, r4
 8000b20:	0030      	movs	r0, r6
 8000b22:	f000 f843 	bl	8000bac <_sbrk_r>
 8000b26:	6038      	str	r0, [r7, #0]
 8000b28:	0029      	movs	r1, r5
 8000b2a:	0030      	movs	r0, r6
 8000b2c:	f000 f83e 	bl	8000bac <_sbrk_r>
 8000b30:	1c43      	adds	r3, r0, #1
 8000b32:	d12b      	bne.n	8000b8c <_malloc_r+0x9c>
 8000b34:	230c      	movs	r3, #12
 8000b36:	0030      	movs	r0, r6
 8000b38:	6033      	str	r3, [r6, #0]
 8000b3a:	f000 f8fb 	bl	8000d34 <__malloc_unlock>
 8000b3e:	e003      	b.n	8000b48 <_malloc_r+0x58>
 8000b40:	2d00      	cmp	r5, #0
 8000b42:	dade      	bge.n	8000b02 <_malloc_r+0x12>
 8000b44:	230c      	movs	r3, #12
 8000b46:	6033      	str	r3, [r6, #0]
 8000b48:	2000      	movs	r0, #0
 8000b4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b4c:	6823      	ldr	r3, [r4, #0]
 8000b4e:	1b5b      	subs	r3, r3, r5
 8000b50:	d419      	bmi.n	8000b86 <_malloc_r+0x96>
 8000b52:	2b0b      	cmp	r3, #11
 8000b54:	d903      	bls.n	8000b5e <_malloc_r+0x6e>
 8000b56:	6023      	str	r3, [r4, #0]
 8000b58:	18e4      	adds	r4, r4, r3
 8000b5a:	6025      	str	r5, [r4, #0]
 8000b5c:	e003      	b.n	8000b66 <_malloc_r+0x76>
 8000b5e:	6863      	ldr	r3, [r4, #4]
 8000b60:	42a2      	cmp	r2, r4
 8000b62:	d10e      	bne.n	8000b82 <_malloc_r+0x92>
 8000b64:	600b      	str	r3, [r1, #0]
 8000b66:	0030      	movs	r0, r6
 8000b68:	f000 f8e4 	bl	8000d34 <__malloc_unlock>
 8000b6c:	0020      	movs	r0, r4
 8000b6e:	2207      	movs	r2, #7
 8000b70:	300b      	adds	r0, #11
 8000b72:	1d23      	adds	r3, r4, #4
 8000b74:	4390      	bics	r0, r2
 8000b76:	1ac2      	subs	r2, r0, r3
 8000b78:	4298      	cmp	r0, r3
 8000b7a:	d0e6      	beq.n	8000b4a <_malloc_r+0x5a>
 8000b7c:	1a1b      	subs	r3, r3, r0
 8000b7e:	50a3      	str	r3, [r4, r2]
 8000b80:	e7e3      	b.n	8000b4a <_malloc_r+0x5a>
 8000b82:	6053      	str	r3, [r2, #4]
 8000b84:	e7ef      	b.n	8000b66 <_malloc_r+0x76>
 8000b86:	0022      	movs	r2, r4
 8000b88:	6864      	ldr	r4, [r4, #4]
 8000b8a:	e7c2      	b.n	8000b12 <_malloc_r+0x22>
 8000b8c:	2303      	movs	r3, #3
 8000b8e:	1cc4      	adds	r4, r0, #3
 8000b90:	439c      	bics	r4, r3
 8000b92:	42a0      	cmp	r0, r4
 8000b94:	d0e1      	beq.n	8000b5a <_malloc_r+0x6a>
 8000b96:	1a21      	subs	r1, r4, r0
 8000b98:	0030      	movs	r0, r6
 8000b9a:	f000 f807 	bl	8000bac <_sbrk_r>
 8000b9e:	1c43      	adds	r3, r0, #1
 8000ba0:	d1db      	bne.n	8000b5a <_malloc_r+0x6a>
 8000ba2:	e7c7      	b.n	8000b34 <_malloc_r+0x44>
 8000ba4:	20000084 	.word	0x20000084
 8000ba8:	20000088 	.word	0x20000088

08000bac <_sbrk_r>:
 8000bac:	2300      	movs	r3, #0
 8000bae:	b570      	push	{r4, r5, r6, lr}
 8000bb0:	4d06      	ldr	r5, [pc, #24]	; (8000bcc <_sbrk_r+0x20>)
 8000bb2:	0004      	movs	r4, r0
 8000bb4:	0008      	movs	r0, r1
 8000bb6:	602b      	str	r3, [r5, #0]
 8000bb8:	f7ff fb36 	bl	8000228 <_sbrk>
 8000bbc:	1c43      	adds	r3, r0, #1
 8000bbe:	d103      	bne.n	8000bc8 <_sbrk_r+0x1c>
 8000bc0:	682b      	ldr	r3, [r5, #0]
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d000      	beq.n	8000bc8 <_sbrk_r+0x1c>
 8000bc6:	6023      	str	r3, [r4, #0]
 8000bc8:	bd70      	pop	{r4, r5, r6, pc}
 8000bca:	46c0      	nop			; (mov r8, r8)
 8000bcc:	20000098 	.word	0x20000098

08000bd0 <__sread>:
 8000bd0:	b570      	push	{r4, r5, r6, lr}
 8000bd2:	000c      	movs	r4, r1
 8000bd4:	250e      	movs	r5, #14
 8000bd6:	5f49      	ldrsh	r1, [r1, r5]
 8000bd8:	f000 f8b4 	bl	8000d44 <_read_r>
 8000bdc:	2800      	cmp	r0, #0
 8000bde:	db03      	blt.n	8000be8 <__sread+0x18>
 8000be0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8000be2:	181b      	adds	r3, r3, r0
 8000be4:	6563      	str	r3, [r4, #84]	; 0x54
 8000be6:	bd70      	pop	{r4, r5, r6, pc}
 8000be8:	89a3      	ldrh	r3, [r4, #12]
 8000bea:	4a02      	ldr	r2, [pc, #8]	; (8000bf4 <__sread+0x24>)
 8000bec:	4013      	ands	r3, r2
 8000bee:	81a3      	strh	r3, [r4, #12]
 8000bf0:	e7f9      	b.n	8000be6 <__sread+0x16>
 8000bf2:	46c0      	nop			; (mov r8, r8)
 8000bf4:	ffffefff 	.word	0xffffefff

08000bf8 <__swrite>:
 8000bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bfa:	001f      	movs	r7, r3
 8000bfc:	898b      	ldrh	r3, [r1, #12]
 8000bfe:	0005      	movs	r5, r0
 8000c00:	000c      	movs	r4, r1
 8000c02:	0016      	movs	r6, r2
 8000c04:	05db      	lsls	r3, r3, #23
 8000c06:	d505      	bpl.n	8000c14 <__swrite+0x1c>
 8000c08:	230e      	movs	r3, #14
 8000c0a:	5ec9      	ldrsh	r1, [r1, r3]
 8000c0c:	2200      	movs	r2, #0
 8000c0e:	2302      	movs	r3, #2
 8000c10:	f000 f874 	bl	8000cfc <_lseek_r>
 8000c14:	89a3      	ldrh	r3, [r4, #12]
 8000c16:	4a05      	ldr	r2, [pc, #20]	; (8000c2c <__swrite+0x34>)
 8000c18:	0028      	movs	r0, r5
 8000c1a:	4013      	ands	r3, r2
 8000c1c:	81a3      	strh	r3, [r4, #12]
 8000c1e:	0032      	movs	r2, r6
 8000c20:	230e      	movs	r3, #14
 8000c22:	5ee1      	ldrsh	r1, [r4, r3]
 8000c24:	003b      	movs	r3, r7
 8000c26:	f000 f81f 	bl	8000c68 <_write_r>
 8000c2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c2c:	ffffefff 	.word	0xffffefff

08000c30 <__sseek>:
 8000c30:	b570      	push	{r4, r5, r6, lr}
 8000c32:	000c      	movs	r4, r1
 8000c34:	250e      	movs	r5, #14
 8000c36:	5f49      	ldrsh	r1, [r1, r5]
 8000c38:	f000 f860 	bl	8000cfc <_lseek_r>
 8000c3c:	89a3      	ldrh	r3, [r4, #12]
 8000c3e:	1c42      	adds	r2, r0, #1
 8000c40:	d103      	bne.n	8000c4a <__sseek+0x1a>
 8000c42:	4a05      	ldr	r2, [pc, #20]	; (8000c58 <__sseek+0x28>)
 8000c44:	4013      	ands	r3, r2
 8000c46:	81a3      	strh	r3, [r4, #12]
 8000c48:	bd70      	pop	{r4, r5, r6, pc}
 8000c4a:	2280      	movs	r2, #128	; 0x80
 8000c4c:	0152      	lsls	r2, r2, #5
 8000c4e:	4313      	orrs	r3, r2
 8000c50:	81a3      	strh	r3, [r4, #12]
 8000c52:	6560      	str	r0, [r4, #84]	; 0x54
 8000c54:	e7f8      	b.n	8000c48 <__sseek+0x18>
 8000c56:	46c0      	nop			; (mov r8, r8)
 8000c58:	ffffefff 	.word	0xffffefff

08000c5c <__sclose>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	230e      	movs	r3, #14
 8000c60:	5ec9      	ldrsh	r1, [r1, r3]
 8000c62:	f000 f815 	bl	8000c90 <_close_r>
 8000c66:	bd10      	pop	{r4, pc}

08000c68 <_write_r>:
 8000c68:	b570      	push	{r4, r5, r6, lr}
 8000c6a:	0004      	movs	r4, r0
 8000c6c:	0008      	movs	r0, r1
 8000c6e:	0011      	movs	r1, r2
 8000c70:	001a      	movs	r2, r3
 8000c72:	2300      	movs	r3, #0
 8000c74:	4d05      	ldr	r5, [pc, #20]	; (8000c8c <_write_r+0x24>)
 8000c76:	602b      	str	r3, [r5, #0]
 8000c78:	f7ff fa8d 	bl	8000196 <_write>
 8000c7c:	1c43      	adds	r3, r0, #1
 8000c7e:	d103      	bne.n	8000c88 <_write_r+0x20>
 8000c80:	682b      	ldr	r3, [r5, #0]
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	d000      	beq.n	8000c88 <_write_r+0x20>
 8000c86:	6023      	str	r3, [r4, #0]
 8000c88:	bd70      	pop	{r4, r5, r6, pc}
 8000c8a:	46c0      	nop			; (mov r8, r8)
 8000c8c:	20000098 	.word	0x20000098

08000c90 <_close_r>:
 8000c90:	2300      	movs	r3, #0
 8000c92:	b570      	push	{r4, r5, r6, lr}
 8000c94:	4d06      	ldr	r5, [pc, #24]	; (8000cb0 <_close_r+0x20>)
 8000c96:	0004      	movs	r4, r0
 8000c98:	0008      	movs	r0, r1
 8000c9a:	602b      	str	r3, [r5, #0]
 8000c9c:	f7ff fa97 	bl	80001ce <_close>
 8000ca0:	1c43      	adds	r3, r0, #1
 8000ca2:	d103      	bne.n	8000cac <_close_r+0x1c>
 8000ca4:	682b      	ldr	r3, [r5, #0]
 8000ca6:	2b00      	cmp	r3, #0
 8000ca8:	d000      	beq.n	8000cac <_close_r+0x1c>
 8000caa:	6023      	str	r3, [r4, #0]
 8000cac:	bd70      	pop	{r4, r5, r6, pc}
 8000cae:	46c0      	nop			; (mov r8, r8)
 8000cb0:	20000098 	.word	0x20000098

08000cb4 <_fstat_r>:
 8000cb4:	2300      	movs	r3, #0
 8000cb6:	b570      	push	{r4, r5, r6, lr}
 8000cb8:	4d06      	ldr	r5, [pc, #24]	; (8000cd4 <_fstat_r+0x20>)
 8000cba:	0004      	movs	r4, r0
 8000cbc:	0008      	movs	r0, r1
 8000cbe:	0011      	movs	r1, r2
 8000cc0:	602b      	str	r3, [r5, #0]
 8000cc2:	f7ff fa8e 	bl	80001e2 <_fstat>
 8000cc6:	1c43      	adds	r3, r0, #1
 8000cc8:	d103      	bne.n	8000cd2 <_fstat_r+0x1e>
 8000cca:	682b      	ldr	r3, [r5, #0]
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d000      	beq.n	8000cd2 <_fstat_r+0x1e>
 8000cd0:	6023      	str	r3, [r4, #0]
 8000cd2:	bd70      	pop	{r4, r5, r6, pc}
 8000cd4:	20000098 	.word	0x20000098

08000cd8 <_isatty_r>:
 8000cd8:	2300      	movs	r3, #0
 8000cda:	b570      	push	{r4, r5, r6, lr}
 8000cdc:	4d06      	ldr	r5, [pc, #24]	; (8000cf8 <_isatty_r+0x20>)
 8000cde:	0004      	movs	r4, r0
 8000ce0:	0008      	movs	r0, r1
 8000ce2:	602b      	str	r3, [r5, #0]
 8000ce4:	f7ff fa8b 	bl	80001fe <_isatty>
 8000ce8:	1c43      	adds	r3, r0, #1
 8000cea:	d103      	bne.n	8000cf4 <_isatty_r+0x1c>
 8000cec:	682b      	ldr	r3, [r5, #0]
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	d000      	beq.n	8000cf4 <_isatty_r+0x1c>
 8000cf2:	6023      	str	r3, [r4, #0]
 8000cf4:	bd70      	pop	{r4, r5, r6, pc}
 8000cf6:	46c0      	nop			; (mov r8, r8)
 8000cf8:	20000098 	.word	0x20000098

08000cfc <_lseek_r>:
 8000cfc:	b570      	push	{r4, r5, r6, lr}
 8000cfe:	0004      	movs	r4, r0
 8000d00:	0008      	movs	r0, r1
 8000d02:	0011      	movs	r1, r2
 8000d04:	001a      	movs	r2, r3
 8000d06:	2300      	movs	r3, #0
 8000d08:	4d05      	ldr	r5, [pc, #20]	; (8000d20 <_lseek_r+0x24>)
 8000d0a:	602b      	str	r3, [r5, #0]
 8000d0c:	f7ff fa80 	bl	8000210 <_lseek>
 8000d10:	1c43      	adds	r3, r0, #1
 8000d12:	d103      	bne.n	8000d1c <_lseek_r+0x20>
 8000d14:	682b      	ldr	r3, [r5, #0]
 8000d16:	2b00      	cmp	r3, #0
 8000d18:	d000      	beq.n	8000d1c <_lseek_r+0x20>
 8000d1a:	6023      	str	r3, [r4, #0]
 8000d1c:	bd70      	pop	{r4, r5, r6, pc}
 8000d1e:	46c0      	nop			; (mov r8, r8)
 8000d20:	20000098 	.word	0x20000098

08000d24 <__malloc_lock>:
 8000d24:	b510      	push	{r4, lr}
 8000d26:	4802      	ldr	r0, [pc, #8]	; (8000d30 <__malloc_lock+0xc>)
 8000d28:	f7ff fe29 	bl	800097e <__retarget_lock_acquire_recursive>
 8000d2c:	bd10      	pop	{r4, pc}
 8000d2e:	46c0      	nop			; (mov r8, r8)
 8000d30:	20000090 	.word	0x20000090

08000d34 <__malloc_unlock>:
 8000d34:	b510      	push	{r4, lr}
 8000d36:	4802      	ldr	r0, [pc, #8]	; (8000d40 <__malloc_unlock+0xc>)
 8000d38:	f7ff fe22 	bl	8000980 <__retarget_lock_release_recursive>
 8000d3c:	bd10      	pop	{r4, pc}
 8000d3e:	46c0      	nop			; (mov r8, r8)
 8000d40:	20000090 	.word	0x20000090

08000d44 <_read_r>:
 8000d44:	b570      	push	{r4, r5, r6, lr}
 8000d46:	0004      	movs	r4, r0
 8000d48:	0008      	movs	r0, r1
 8000d4a:	0011      	movs	r1, r2
 8000d4c:	001a      	movs	r2, r3
 8000d4e:	2300      	movs	r3, #0
 8000d50:	4d05      	ldr	r5, [pc, #20]	; (8000d68 <_read_r+0x24>)
 8000d52:	602b      	str	r3, [r5, #0]
 8000d54:	f7ff fa02 	bl	800015c <_read>
 8000d58:	1c43      	adds	r3, r0, #1
 8000d5a:	d103      	bne.n	8000d64 <_read_r+0x20>
 8000d5c:	682b      	ldr	r3, [r5, #0]
 8000d5e:	2b00      	cmp	r3, #0
 8000d60:	d000      	beq.n	8000d64 <_read_r+0x20>
 8000d62:	6023      	str	r3, [r4, #0]
 8000d64:	bd70      	pop	{r4, r5, r6, pc}
 8000d66:	46c0      	nop			; (mov r8, r8)
 8000d68:	20000098 	.word	0x20000098

08000d6c <_init>:
 8000d6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d6e:	46c0      	nop			; (mov r8, r8)
 8000d70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d72:	bc08      	pop	{r3}
 8000d74:	469e      	mov	lr, r3
 8000d76:	4770      	bx	lr

08000d78 <_fini>:
 8000d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d7a:	46c0      	nop			; (mov r8, r8)
 8000d7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d7e:	bc08      	pop	{r3}
 8000d80:	469e      	mov	lr, r3
 8000d82:	4770      	bx	lr
