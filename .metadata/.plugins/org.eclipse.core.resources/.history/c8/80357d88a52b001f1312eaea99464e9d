.section .data

SIGN_DATA:
.byte 13
.byte -10
.byte 9
.byte 14
.byte -18
.byte -9
.byte 12
.byte -19
.byte 16

.syntax unified
.cpu cortex-m0
.thumb
.section .text
.global __main

__main:
// Load data address in r4
// Load data address in r4
ldr r4, =SIGN_DATA
ldrb r1, [r4]        // Load the unsigned byte at SIGN_DATA[0] into r1
cmp r1, #128         // Compare with 128 to check if the sign bit is set
it lt                // If less than 128 (i.e., if the sign bit is not set)
movlt r0, r1         // Move r1 to r0 as is
it ge                // If greater or equal to 128 (i.e., if the sign bit is set)
subge r0, r1, #256   // Subtract 256 to sign-extend the byte
    movs r3, #9        // Counter for 9 bytes

    // Load a signed byte from address r0
    ldr r2, [r0]
	adds r0,r0,#1
begin:
    // Load a signed byte from address r0
    ldr r5, [r0]
	cmp r5,r2

	//branch to next if r1>=r2
	bge next
	mov r2,r5

next:
	adds r0,r0,#1
	subs r3,r3,#1

	//branch to begin if result is not equal to zero
	bne begin

stop:
    b stop             // Infinite loop to stop the program
    .align
    .end
