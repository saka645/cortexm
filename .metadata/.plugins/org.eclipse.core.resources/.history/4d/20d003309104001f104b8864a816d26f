/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#define SIZE_TASK_STACK  			1024U
#define SIZE_SCHED_STACK  			1024U

#define SRAM_START  				0x20000000U
#define SIZE_SRAM					(8*1024U)
#define SRAM_END					(SRAM_START+SIZE_SRAM)
#define T1_STACK_START				SRAM_END
#define T2_STACK_START				(SRAM_END-SIZE_TASK_STACK)
#define T3_STACK_START				((SRAM_END)-(2*SIZE_TASK_STACK))
#define T4_STACK_START				((SRAM_END)-(3*SIZE_TASK_STACK))
#define SCHED_STACK_START			((SRAM_END)-(4*SIZE_TASK_STACK))

#define TICK_HZ						1000U
#define SYSTICK_FREQ				8000U//8MHZ

void task1_handler(void);
void task2_handler(void);
void task3_handler(void);
void task4_handler(void);

void systick_init(uint32_t tick);
int main(void)
{
	systick_init(); //100hz or 1ms
    /* Loop forever */
	for(;;);
}



void task1_handler(void)
{
	while(1);
}

void task2_handler(void)
{
	while(1);
}

void task3_handler(void)
{
	while(1);
}

void task4_handler(void)
{
	while(1);
}

void systick_init(uint32_t tick)
{

}
