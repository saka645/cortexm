
STACK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000cf0  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  08000db0  08000db0  00010db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e24  08000e24  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e24  08000e24  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e24  08000e24  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e24  08000e24  00010e24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e28  08000e28  00010e28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e2c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08000e90  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000e90  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001b26  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000055d  00000000  00000000  00021bb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000130  00000000  00000000  00022110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00022240  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002890  00000000  00000000  00022338  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001173  00000000  00000000  00024bc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009687  00000000  00000000  00025d3b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002f3c2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a18  00000000  00000000  0002f418  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000064 	.word	0x20000064
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000d98 	.word	0x08000d98

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000068 	.word	0x20000068
 8000104:	08000d98 	.word	0x08000d98

08000108 <fun_add>:
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


int fun_add(int a, int b, int c)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b084      	sub	sp, #16
 800010c:	af00      	add	r7, sp, #0
 800010e:	60f8      	str	r0, [r7, #12]
 8000110:	60b9      	str	r1, [r7, #8]
 8000112:	607a      	str	r2, [r7, #4]
	return a+b+c;
 8000114:	68fa      	ldr	r2, [r7, #12]
 8000116:	68bb      	ldr	r3, [r7, #8]
 8000118:	18d2      	adds	r2, r2, r3
 800011a:	687b      	ldr	r3, [r7, #4]
 800011c:	18d3      	adds	r3, r2, r3
}
 800011e:	0018      	movs	r0, r3
 8000120:	46bd      	mov	sp, r7
 8000122:	b004      	add	sp, #16
 8000124:	bd80      	pop	{r7, pc}
	...

08000128 <change_sp_to_psp>:
__attribute__((nacked)) void change_sp_to_psp(void)
{
 8000128:	b580      	push	{r7, lr}
 800012a:	af00      	add	r7, sp, #0
	__asm volatile(".equ SRAM_END, (0x20000000+(8*1024))");
	__asm volatile(".equ PSP_START, (SRAM_END-512)");
	__asm volatile("LDR R0,=PSP_START");
 800012c:	4804      	ldr	r0, [pc, #16]	; (8000140 <change_sp_to_psp+0x18>)
	__asm volatile("MSR PSP,R0");
 800012e:	f380 8809 	msr	PSP, r0
	__asm volatile("MOV R0,#0X02");
 8000132:	2002      	movs	r0, #2
	__asm volatile("MSR CONTROL,R0");
 8000134:	f380 8814 	msr	CONTROL, r0
	__asm volatile("BX LR");
 8000138:	4770      	bx	lr
}
 800013a:	46c0      	nop			; (mov r8, r8)
 800013c:	46bd      	mov	sp, r7
 800013e:	bd80      	pop	{r7, pc}
 8000140:	20001e00 	.word	0x20001e00

08000144 <generate_exception>:
void generate_exception()
{
 8000144:	b580      	push	{r7, lr}
 8000146:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0X2");
 8000148:	df02      	svc	2
}
 800014a:	46c0      	nop			; (mov r8, r8)
 800014c:	46bd      	mov	sp, r7
 800014e:	bd80      	pop	{r7, pc}

08000150 <main>:
int main(void)
{
 8000150:	b580      	push	{r7, lr}
 8000152:	b082      	sub	sp, #8
 8000154:	af00      	add	r7, sp, #0
	change_sp_to_psp();
 8000156:	f7ff ffe7 	bl	8000128 <change_sp_to_psp>
	int ret;
	ret = fun_add(1,5,6);
 800015a:	2206      	movs	r2, #6
 800015c:	2105      	movs	r1, #5
 800015e:	2001      	movs	r0, #1
 8000160:	f7ff ffd2 	bl	8000108 <fun_add>
 8000164:	0003      	movs	r3, r0
 8000166:	607b      	str	r3, [r7, #4]
	generate_exception();
 8000168:	f7ff ffec 	bl	8000144 <generate_exception>

    /* Loop forever */
	for(;;);
 800016c:	e7fe      	b.n	800016c <main+0x1c>
	...

08000170 <SVC_Handler>:
}
void SVC_Handler(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	printf("in svc handler\n");
 8000174:	4b03      	ldr	r3, [pc, #12]	; (8000184 <SVC_Handler+0x14>)
 8000176:	0018      	movs	r0, r3
 8000178:	f000 f970 	bl	800045c <puts>
}
 800017c:	46c0      	nop			; (mov r8, r8)
 800017e:	46bd      	mov	sp, r7
 8000180:	bd80      	pop	{r7, pc}
 8000182:	46c0      	nop			; (mov r8, r8)
 8000184:	08000db0 	.word	0x08000db0

08000188 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000188:	b580      	push	{r7, lr}
 800018a:	b086      	sub	sp, #24
 800018c:	af00      	add	r7, sp, #0
 800018e:	60f8      	str	r0, [r7, #12]
 8000190:	60b9      	str	r1, [r7, #8]
 8000192:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000194:	2300      	movs	r3, #0
 8000196:	617b      	str	r3, [r7, #20]
 8000198:	e00a      	b.n	80001b0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800019a:	e000      	b.n	800019e <_read+0x16>
 800019c:	bf00      	nop
 800019e:	0001      	movs	r1, r0
 80001a0:	68bb      	ldr	r3, [r7, #8]
 80001a2:	1c5a      	adds	r2, r3, #1
 80001a4:	60ba      	str	r2, [r7, #8]
 80001a6:	b2ca      	uxtb	r2, r1
 80001a8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001aa:	697b      	ldr	r3, [r7, #20]
 80001ac:	3301      	adds	r3, #1
 80001ae:	617b      	str	r3, [r7, #20]
 80001b0:	697a      	ldr	r2, [r7, #20]
 80001b2:	687b      	ldr	r3, [r7, #4]
 80001b4:	429a      	cmp	r2, r3
 80001b6:	dbf0      	blt.n	800019a <_read+0x12>
	}

return len;
 80001b8:	687b      	ldr	r3, [r7, #4]
}
 80001ba:	0018      	movs	r0, r3
 80001bc:	46bd      	mov	sp, r7
 80001be:	b006      	add	sp, #24
 80001c0:	bd80      	pop	{r7, pc}

080001c2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80001c2:	b580      	push	{r7, lr}
 80001c4:	b086      	sub	sp, #24
 80001c6:	af00      	add	r7, sp, #0
 80001c8:	60f8      	str	r0, [r7, #12]
 80001ca:	60b9      	str	r1, [r7, #8]
 80001cc:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001ce:	2300      	movs	r3, #0
 80001d0:	617b      	str	r3, [r7, #20]
 80001d2:	e009      	b.n	80001e8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80001d4:	68bb      	ldr	r3, [r7, #8]
 80001d6:	1c5a      	adds	r2, r3, #1
 80001d8:	60ba      	str	r2, [r7, #8]
 80001da:	781b      	ldrb	r3, [r3, #0]
 80001dc:	0018      	movs	r0, r3
 80001de:	e000      	b.n	80001e2 <_write+0x20>
 80001e0:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001e2:	697b      	ldr	r3, [r7, #20]
 80001e4:	3301      	adds	r3, #1
 80001e6:	617b      	str	r3, [r7, #20]
 80001e8:	697a      	ldr	r2, [r7, #20]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	429a      	cmp	r2, r3
 80001ee:	dbf1      	blt.n	80001d4 <_write+0x12>
	}
	return len;
 80001f0:	687b      	ldr	r3, [r7, #4]
}
 80001f2:	0018      	movs	r0, r3
 80001f4:	46bd      	mov	sp, r7
 80001f6:	b006      	add	sp, #24
 80001f8:	bd80      	pop	{r7, pc}

080001fa <_close>:

int _close(int file)
{
 80001fa:	b580      	push	{r7, lr}
 80001fc:	b082      	sub	sp, #8
 80001fe:	af00      	add	r7, sp, #0
 8000200:	6078      	str	r0, [r7, #4]
	return -1;
 8000202:	2301      	movs	r3, #1
 8000204:	425b      	negs	r3, r3
}
 8000206:	0018      	movs	r0, r3
 8000208:	46bd      	mov	sp, r7
 800020a:	b002      	add	sp, #8
 800020c:	bd80      	pop	{r7, pc}

0800020e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800020e:	b580      	push	{r7, lr}
 8000210:	b082      	sub	sp, #8
 8000212:	af00      	add	r7, sp, #0
 8000214:	6078      	str	r0, [r7, #4]
 8000216:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000218:	683b      	ldr	r3, [r7, #0]
 800021a:	2280      	movs	r2, #128	; 0x80
 800021c:	0192      	lsls	r2, r2, #6
 800021e:	605a      	str	r2, [r3, #4]
	return 0;
 8000220:	2300      	movs	r3, #0
}
 8000222:	0018      	movs	r0, r3
 8000224:	46bd      	mov	sp, r7
 8000226:	b002      	add	sp, #8
 8000228:	bd80      	pop	{r7, pc}

0800022a <_isatty>:

int _isatty(int file)
{
 800022a:	b580      	push	{r7, lr}
 800022c:	b082      	sub	sp, #8
 800022e:	af00      	add	r7, sp, #0
 8000230:	6078      	str	r0, [r7, #4]
	return 1;
 8000232:	2301      	movs	r3, #1
}
 8000234:	0018      	movs	r0, r3
 8000236:	46bd      	mov	sp, r7
 8000238:	b002      	add	sp, #8
 800023a:	bd80      	pop	{r7, pc}

0800023c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800023c:	b580      	push	{r7, lr}
 800023e:	b084      	sub	sp, #16
 8000240:	af00      	add	r7, sp, #0
 8000242:	60f8      	str	r0, [r7, #12]
 8000244:	60b9      	str	r1, [r7, #8]
 8000246:	607a      	str	r2, [r7, #4]
	return 0;
 8000248:	2300      	movs	r3, #0
}
 800024a:	0018      	movs	r0, r3
 800024c:	46bd      	mov	sp, r7
 800024e:	b004      	add	sp, #16
 8000250:	bd80      	pop	{r7, pc}
	...

08000254 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	b086      	sub	sp, #24
 8000258:	af00      	add	r7, sp, #0
 800025a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800025c:	4a14      	ldr	r2, [pc, #80]	; (80002b0 <_sbrk+0x5c>)
 800025e:	4b15      	ldr	r3, [pc, #84]	; (80002b4 <_sbrk+0x60>)
 8000260:	1ad3      	subs	r3, r2, r3
 8000262:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000264:	697b      	ldr	r3, [r7, #20]
 8000266:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000268:	4b13      	ldr	r3, [pc, #76]	; (80002b8 <_sbrk+0x64>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b00      	cmp	r3, #0
 800026e:	d102      	bne.n	8000276 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000270:	4b11      	ldr	r3, [pc, #68]	; (80002b8 <_sbrk+0x64>)
 8000272:	4a12      	ldr	r2, [pc, #72]	; (80002bc <_sbrk+0x68>)
 8000274:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000276:	4b10      	ldr	r3, [pc, #64]	; (80002b8 <_sbrk+0x64>)
 8000278:	681a      	ldr	r2, [r3, #0]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	18d3      	adds	r3, r2, r3
 800027e:	693a      	ldr	r2, [r7, #16]
 8000280:	429a      	cmp	r2, r3
 8000282:	d207      	bcs.n	8000294 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000284:	f000 f846 	bl	8000314 <__errno>
 8000288:	0003      	movs	r3, r0
 800028a:	220c      	movs	r2, #12
 800028c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800028e:	2301      	movs	r3, #1
 8000290:	425b      	negs	r3, r3
 8000292:	e009      	b.n	80002a8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000294:	4b08      	ldr	r3, [pc, #32]	; (80002b8 <_sbrk+0x64>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800029a:	4b07      	ldr	r3, [pc, #28]	; (80002b8 <_sbrk+0x64>)
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	18d2      	adds	r2, r2, r3
 80002a2:	4b05      	ldr	r3, [pc, #20]	; (80002b8 <_sbrk+0x64>)
 80002a4:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80002a6:	68fb      	ldr	r3, [r7, #12]
}
 80002a8:	0018      	movs	r0, r3
 80002aa:	46bd      	mov	sp, r7
 80002ac:	b006      	add	sp, #24
 80002ae:	bd80      	pop	{r7, pc}
 80002b0:	20002000 	.word	0x20002000
 80002b4:	00000400 	.word	0x00000400
 80002b8:	20000080 	.word	0x20000080
 80002bc:	200000a0 	.word	0x200000a0

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002c4:	e000      	b.n	80002c8 <Reset_Handler+0x8>
 80002c6:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	; (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	; (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	; (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 f817 	bl	8000320 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ff2d 	bl	8000150 <main>

080002f6 <LoopForever>:

LoopForever:
    b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000304:	08000e2c 	.word	0x08000e2c
  ldr r2, =_sbss
 8000308:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800030c:	2000009c 	.word	0x2000009c

08000310 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <__errno>:
 8000314:	4b01      	ldr	r3, [pc, #4]	; (800031c <__errno+0x8>)
 8000316:	6818      	ldr	r0, [r3, #0]
 8000318:	4770      	bx	lr
 800031a:	46c0      	nop			; (mov r8, r8)
 800031c:	20000000 	.word	0x20000000

08000320 <__libc_init_array>:
 8000320:	b570      	push	{r4, r5, r6, lr}
 8000322:	2600      	movs	r6, #0
 8000324:	4d0c      	ldr	r5, [pc, #48]	; (8000358 <__libc_init_array+0x38>)
 8000326:	4c0d      	ldr	r4, [pc, #52]	; (800035c <__libc_init_array+0x3c>)
 8000328:	1b64      	subs	r4, r4, r5
 800032a:	10a4      	asrs	r4, r4, #2
 800032c:	42a6      	cmp	r6, r4
 800032e:	d109      	bne.n	8000344 <__libc_init_array+0x24>
 8000330:	2600      	movs	r6, #0
 8000332:	f000 fd31 	bl	8000d98 <_init>
 8000336:	4d0a      	ldr	r5, [pc, #40]	; (8000360 <__libc_init_array+0x40>)
 8000338:	4c0a      	ldr	r4, [pc, #40]	; (8000364 <__libc_init_array+0x44>)
 800033a:	1b64      	subs	r4, r4, r5
 800033c:	10a4      	asrs	r4, r4, #2
 800033e:	42a6      	cmp	r6, r4
 8000340:	d105      	bne.n	800034e <__libc_init_array+0x2e>
 8000342:	bd70      	pop	{r4, r5, r6, pc}
 8000344:	00b3      	lsls	r3, r6, #2
 8000346:	58eb      	ldr	r3, [r5, r3]
 8000348:	4798      	blx	r3
 800034a:	3601      	adds	r6, #1
 800034c:	e7ee      	b.n	800032c <__libc_init_array+0xc>
 800034e:	00b3      	lsls	r3, r6, #2
 8000350:	58eb      	ldr	r3, [r5, r3]
 8000352:	4798      	blx	r3
 8000354:	3601      	adds	r6, #1
 8000356:	e7f2      	b.n	800033e <__libc_init_array+0x1e>
 8000358:	08000e24 	.word	0x08000e24
 800035c:	08000e24 	.word	0x08000e24
 8000360:	08000e24 	.word	0x08000e24
 8000364:	08000e28 	.word	0x08000e28

08000368 <memset>:
 8000368:	0003      	movs	r3, r0
 800036a:	1882      	adds	r2, r0, r2
 800036c:	4293      	cmp	r3, r2
 800036e:	d100      	bne.n	8000372 <memset+0xa>
 8000370:	4770      	bx	lr
 8000372:	7019      	strb	r1, [r3, #0]
 8000374:	3301      	adds	r3, #1
 8000376:	e7f9      	b.n	800036c <memset+0x4>

08000378 <_puts_r>:
 8000378:	b570      	push	{r4, r5, r6, lr}
 800037a:	0005      	movs	r5, r0
 800037c:	000e      	movs	r6, r1
 800037e:	2800      	cmp	r0, #0
 8000380:	d004      	beq.n	800038c <_puts_r+0x14>
 8000382:	6983      	ldr	r3, [r0, #24]
 8000384:	2b00      	cmp	r3, #0
 8000386:	d101      	bne.n	800038c <_puts_r+0x14>
 8000388:	f000 fa6e 	bl	8000868 <__sinit>
 800038c:	69ab      	ldr	r3, [r5, #24]
 800038e:	68ac      	ldr	r4, [r5, #8]
 8000390:	2b00      	cmp	r3, #0
 8000392:	d102      	bne.n	800039a <_puts_r+0x22>
 8000394:	0028      	movs	r0, r5
 8000396:	f000 fa67 	bl	8000868 <__sinit>
 800039a:	4b2d      	ldr	r3, [pc, #180]	; (8000450 <_puts_r+0xd8>)
 800039c:	429c      	cmp	r4, r3
 800039e:	d122      	bne.n	80003e6 <_puts_r+0x6e>
 80003a0:	686c      	ldr	r4, [r5, #4]
 80003a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003a4:	07db      	lsls	r3, r3, #31
 80003a6:	d405      	bmi.n	80003b4 <_puts_r+0x3c>
 80003a8:	89a3      	ldrh	r3, [r4, #12]
 80003aa:	059b      	lsls	r3, r3, #22
 80003ac:	d402      	bmi.n	80003b4 <_puts_r+0x3c>
 80003ae:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003b0:	f000 fafb 	bl	80009aa <__retarget_lock_acquire_recursive>
 80003b4:	89a3      	ldrh	r3, [r4, #12]
 80003b6:	071b      	lsls	r3, r3, #28
 80003b8:	d502      	bpl.n	80003c0 <_puts_r+0x48>
 80003ba:	6923      	ldr	r3, [r4, #16]
 80003bc:	2b00      	cmp	r3, #0
 80003be:	d129      	bne.n	8000414 <_puts_r+0x9c>
 80003c0:	0021      	movs	r1, r4
 80003c2:	0028      	movs	r0, r5
 80003c4:	f000 f8aa 	bl	800051c <__swsetup_r>
 80003c8:	2800      	cmp	r0, #0
 80003ca:	d023      	beq.n	8000414 <_puts_r+0x9c>
 80003cc:	2501      	movs	r5, #1
 80003ce:	426d      	negs	r5, r5
 80003d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003d2:	07db      	lsls	r3, r3, #31
 80003d4:	d405      	bmi.n	80003e2 <_puts_r+0x6a>
 80003d6:	89a3      	ldrh	r3, [r4, #12]
 80003d8:	059b      	lsls	r3, r3, #22
 80003da:	d402      	bmi.n	80003e2 <_puts_r+0x6a>
 80003dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003de:	f000 fae5 	bl	80009ac <__retarget_lock_release_recursive>
 80003e2:	0028      	movs	r0, r5
 80003e4:	bd70      	pop	{r4, r5, r6, pc}
 80003e6:	4b1b      	ldr	r3, [pc, #108]	; (8000454 <_puts_r+0xdc>)
 80003e8:	429c      	cmp	r4, r3
 80003ea:	d101      	bne.n	80003f0 <_puts_r+0x78>
 80003ec:	68ac      	ldr	r4, [r5, #8]
 80003ee:	e7d8      	b.n	80003a2 <_puts_r+0x2a>
 80003f0:	4b19      	ldr	r3, [pc, #100]	; (8000458 <_puts_r+0xe0>)
 80003f2:	429c      	cmp	r4, r3
 80003f4:	d1d5      	bne.n	80003a2 <_puts_r+0x2a>
 80003f6:	68ec      	ldr	r4, [r5, #12]
 80003f8:	e7d3      	b.n	80003a2 <_puts_r+0x2a>
 80003fa:	3601      	adds	r6, #1
 80003fc:	60a3      	str	r3, [r4, #8]
 80003fe:	2b00      	cmp	r3, #0
 8000400:	da04      	bge.n	800040c <_puts_r+0x94>
 8000402:	69a2      	ldr	r2, [r4, #24]
 8000404:	429a      	cmp	r2, r3
 8000406:	dc16      	bgt.n	8000436 <_puts_r+0xbe>
 8000408:	290a      	cmp	r1, #10
 800040a:	d014      	beq.n	8000436 <_puts_r+0xbe>
 800040c:	6823      	ldr	r3, [r4, #0]
 800040e:	1c5a      	adds	r2, r3, #1
 8000410:	6022      	str	r2, [r4, #0]
 8000412:	7019      	strb	r1, [r3, #0]
 8000414:	68a3      	ldr	r3, [r4, #8]
 8000416:	7831      	ldrb	r1, [r6, #0]
 8000418:	3b01      	subs	r3, #1
 800041a:	2900      	cmp	r1, #0
 800041c:	d1ed      	bne.n	80003fa <_puts_r+0x82>
 800041e:	60a3      	str	r3, [r4, #8]
 8000420:	2b00      	cmp	r3, #0
 8000422:	da0f      	bge.n	8000444 <_puts_r+0xcc>
 8000424:	0028      	movs	r0, r5
 8000426:	0022      	movs	r2, r4
 8000428:	310a      	adds	r1, #10
 800042a:	f000 f821 	bl	8000470 <__swbuf_r>
 800042e:	250a      	movs	r5, #10
 8000430:	1c43      	adds	r3, r0, #1
 8000432:	d1cd      	bne.n	80003d0 <_puts_r+0x58>
 8000434:	e7ca      	b.n	80003cc <_puts_r+0x54>
 8000436:	0022      	movs	r2, r4
 8000438:	0028      	movs	r0, r5
 800043a:	f000 f819 	bl	8000470 <__swbuf_r>
 800043e:	1c43      	adds	r3, r0, #1
 8000440:	d1e8      	bne.n	8000414 <_puts_r+0x9c>
 8000442:	e7c3      	b.n	80003cc <_puts_r+0x54>
 8000444:	250a      	movs	r5, #10
 8000446:	6823      	ldr	r3, [r4, #0]
 8000448:	1c5a      	adds	r2, r3, #1
 800044a:	6022      	str	r2, [r4, #0]
 800044c:	701d      	strb	r5, [r3, #0]
 800044e:	e7bf      	b.n	80003d0 <_puts_r+0x58>
 8000450:	08000de4 	.word	0x08000de4
 8000454:	08000e04 	.word	0x08000e04
 8000458:	08000dc4 	.word	0x08000dc4

0800045c <puts>:
 800045c:	b510      	push	{r4, lr}
 800045e:	4b03      	ldr	r3, [pc, #12]	; (800046c <puts+0x10>)
 8000460:	0001      	movs	r1, r0
 8000462:	6818      	ldr	r0, [r3, #0]
 8000464:	f7ff ff88 	bl	8000378 <_puts_r>
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)
 800046c:	20000000 	.word	0x20000000

08000470 <__swbuf_r>:
 8000470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000472:	0005      	movs	r5, r0
 8000474:	000e      	movs	r6, r1
 8000476:	0014      	movs	r4, r2
 8000478:	2800      	cmp	r0, #0
 800047a:	d004      	beq.n	8000486 <__swbuf_r+0x16>
 800047c:	6983      	ldr	r3, [r0, #24]
 800047e:	2b00      	cmp	r3, #0
 8000480:	d101      	bne.n	8000486 <__swbuf_r+0x16>
 8000482:	f000 f9f1 	bl	8000868 <__sinit>
 8000486:	4b22      	ldr	r3, [pc, #136]	; (8000510 <__swbuf_r+0xa0>)
 8000488:	429c      	cmp	r4, r3
 800048a:	d12e      	bne.n	80004ea <__swbuf_r+0x7a>
 800048c:	686c      	ldr	r4, [r5, #4]
 800048e:	69a3      	ldr	r3, [r4, #24]
 8000490:	60a3      	str	r3, [r4, #8]
 8000492:	89a3      	ldrh	r3, [r4, #12]
 8000494:	071b      	lsls	r3, r3, #28
 8000496:	d532      	bpl.n	80004fe <__swbuf_r+0x8e>
 8000498:	6923      	ldr	r3, [r4, #16]
 800049a:	2b00      	cmp	r3, #0
 800049c:	d02f      	beq.n	80004fe <__swbuf_r+0x8e>
 800049e:	6823      	ldr	r3, [r4, #0]
 80004a0:	6922      	ldr	r2, [r4, #16]
 80004a2:	b2f7      	uxtb	r7, r6
 80004a4:	1a98      	subs	r0, r3, r2
 80004a6:	6963      	ldr	r3, [r4, #20]
 80004a8:	b2f6      	uxtb	r6, r6
 80004aa:	4283      	cmp	r3, r0
 80004ac:	dc05      	bgt.n	80004ba <__swbuf_r+0x4a>
 80004ae:	0021      	movs	r1, r4
 80004b0:	0028      	movs	r0, r5
 80004b2:	f000 f937 	bl	8000724 <_fflush_r>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d127      	bne.n	800050a <__swbuf_r+0x9a>
 80004ba:	68a3      	ldr	r3, [r4, #8]
 80004bc:	3001      	adds	r0, #1
 80004be:	3b01      	subs	r3, #1
 80004c0:	60a3      	str	r3, [r4, #8]
 80004c2:	6823      	ldr	r3, [r4, #0]
 80004c4:	1c5a      	adds	r2, r3, #1
 80004c6:	6022      	str	r2, [r4, #0]
 80004c8:	701f      	strb	r7, [r3, #0]
 80004ca:	6963      	ldr	r3, [r4, #20]
 80004cc:	4283      	cmp	r3, r0
 80004ce:	d004      	beq.n	80004da <__swbuf_r+0x6a>
 80004d0:	89a3      	ldrh	r3, [r4, #12]
 80004d2:	07db      	lsls	r3, r3, #31
 80004d4:	d507      	bpl.n	80004e6 <__swbuf_r+0x76>
 80004d6:	2e0a      	cmp	r6, #10
 80004d8:	d105      	bne.n	80004e6 <__swbuf_r+0x76>
 80004da:	0021      	movs	r1, r4
 80004dc:	0028      	movs	r0, r5
 80004de:	f000 f921 	bl	8000724 <_fflush_r>
 80004e2:	2800      	cmp	r0, #0
 80004e4:	d111      	bne.n	800050a <__swbuf_r+0x9a>
 80004e6:	0030      	movs	r0, r6
 80004e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004ea:	4b0a      	ldr	r3, [pc, #40]	; (8000514 <__swbuf_r+0xa4>)
 80004ec:	429c      	cmp	r4, r3
 80004ee:	d101      	bne.n	80004f4 <__swbuf_r+0x84>
 80004f0:	68ac      	ldr	r4, [r5, #8]
 80004f2:	e7cc      	b.n	800048e <__swbuf_r+0x1e>
 80004f4:	4b08      	ldr	r3, [pc, #32]	; (8000518 <__swbuf_r+0xa8>)
 80004f6:	429c      	cmp	r4, r3
 80004f8:	d1c9      	bne.n	800048e <__swbuf_r+0x1e>
 80004fa:	68ec      	ldr	r4, [r5, #12]
 80004fc:	e7c7      	b.n	800048e <__swbuf_r+0x1e>
 80004fe:	0021      	movs	r1, r4
 8000500:	0028      	movs	r0, r5
 8000502:	f000 f80b 	bl	800051c <__swsetup_r>
 8000506:	2800      	cmp	r0, #0
 8000508:	d0c9      	beq.n	800049e <__swbuf_r+0x2e>
 800050a:	2601      	movs	r6, #1
 800050c:	4276      	negs	r6, r6
 800050e:	e7ea      	b.n	80004e6 <__swbuf_r+0x76>
 8000510:	08000de4 	.word	0x08000de4
 8000514:	08000e04 	.word	0x08000e04
 8000518:	08000dc4 	.word	0x08000dc4

0800051c <__swsetup_r>:
 800051c:	4b37      	ldr	r3, [pc, #220]	; (80005fc <__swsetup_r+0xe0>)
 800051e:	b570      	push	{r4, r5, r6, lr}
 8000520:	681d      	ldr	r5, [r3, #0]
 8000522:	0006      	movs	r6, r0
 8000524:	000c      	movs	r4, r1
 8000526:	2d00      	cmp	r5, #0
 8000528:	d005      	beq.n	8000536 <__swsetup_r+0x1a>
 800052a:	69ab      	ldr	r3, [r5, #24]
 800052c:	2b00      	cmp	r3, #0
 800052e:	d102      	bne.n	8000536 <__swsetup_r+0x1a>
 8000530:	0028      	movs	r0, r5
 8000532:	f000 f999 	bl	8000868 <__sinit>
 8000536:	4b32      	ldr	r3, [pc, #200]	; (8000600 <__swsetup_r+0xe4>)
 8000538:	429c      	cmp	r4, r3
 800053a:	d10f      	bne.n	800055c <__swsetup_r+0x40>
 800053c:	686c      	ldr	r4, [r5, #4]
 800053e:	230c      	movs	r3, #12
 8000540:	5ee2      	ldrsh	r2, [r4, r3]
 8000542:	b293      	uxth	r3, r2
 8000544:	0711      	lsls	r1, r2, #28
 8000546:	d42d      	bmi.n	80005a4 <__swsetup_r+0x88>
 8000548:	06d9      	lsls	r1, r3, #27
 800054a:	d411      	bmi.n	8000570 <__swsetup_r+0x54>
 800054c:	2309      	movs	r3, #9
 800054e:	2001      	movs	r0, #1
 8000550:	6033      	str	r3, [r6, #0]
 8000552:	3337      	adds	r3, #55	; 0x37
 8000554:	4313      	orrs	r3, r2
 8000556:	81a3      	strh	r3, [r4, #12]
 8000558:	4240      	negs	r0, r0
 800055a:	bd70      	pop	{r4, r5, r6, pc}
 800055c:	4b29      	ldr	r3, [pc, #164]	; (8000604 <__swsetup_r+0xe8>)
 800055e:	429c      	cmp	r4, r3
 8000560:	d101      	bne.n	8000566 <__swsetup_r+0x4a>
 8000562:	68ac      	ldr	r4, [r5, #8]
 8000564:	e7eb      	b.n	800053e <__swsetup_r+0x22>
 8000566:	4b28      	ldr	r3, [pc, #160]	; (8000608 <__swsetup_r+0xec>)
 8000568:	429c      	cmp	r4, r3
 800056a:	d1e8      	bne.n	800053e <__swsetup_r+0x22>
 800056c:	68ec      	ldr	r4, [r5, #12]
 800056e:	e7e6      	b.n	800053e <__swsetup_r+0x22>
 8000570:	075b      	lsls	r3, r3, #29
 8000572:	d513      	bpl.n	800059c <__swsetup_r+0x80>
 8000574:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000576:	2900      	cmp	r1, #0
 8000578:	d008      	beq.n	800058c <__swsetup_r+0x70>
 800057a:	0023      	movs	r3, r4
 800057c:	3344      	adds	r3, #68	; 0x44
 800057e:	4299      	cmp	r1, r3
 8000580:	d002      	beq.n	8000588 <__swsetup_r+0x6c>
 8000582:	0030      	movs	r0, r6
 8000584:	f000 fa80 	bl	8000a88 <_free_r>
 8000588:	2300      	movs	r3, #0
 800058a:	6363      	str	r3, [r4, #52]	; 0x34
 800058c:	2224      	movs	r2, #36	; 0x24
 800058e:	89a3      	ldrh	r3, [r4, #12]
 8000590:	4393      	bics	r3, r2
 8000592:	81a3      	strh	r3, [r4, #12]
 8000594:	2300      	movs	r3, #0
 8000596:	6063      	str	r3, [r4, #4]
 8000598:	6923      	ldr	r3, [r4, #16]
 800059a:	6023      	str	r3, [r4, #0]
 800059c:	2308      	movs	r3, #8
 800059e:	89a2      	ldrh	r2, [r4, #12]
 80005a0:	4313      	orrs	r3, r2
 80005a2:	81a3      	strh	r3, [r4, #12]
 80005a4:	6923      	ldr	r3, [r4, #16]
 80005a6:	2b00      	cmp	r3, #0
 80005a8:	d10b      	bne.n	80005c2 <__swsetup_r+0xa6>
 80005aa:	21a0      	movs	r1, #160	; 0xa0
 80005ac:	2280      	movs	r2, #128	; 0x80
 80005ae:	89a3      	ldrh	r3, [r4, #12]
 80005b0:	0089      	lsls	r1, r1, #2
 80005b2:	0092      	lsls	r2, r2, #2
 80005b4:	400b      	ands	r3, r1
 80005b6:	4293      	cmp	r3, r2
 80005b8:	d003      	beq.n	80005c2 <__swsetup_r+0xa6>
 80005ba:	0021      	movs	r1, r4
 80005bc:	0030      	movs	r0, r6
 80005be:	f000 fa1f 	bl	8000a00 <__smakebuf_r>
 80005c2:	220c      	movs	r2, #12
 80005c4:	5ea3      	ldrsh	r3, [r4, r2]
 80005c6:	2001      	movs	r0, #1
 80005c8:	001a      	movs	r2, r3
 80005ca:	b299      	uxth	r1, r3
 80005cc:	4002      	ands	r2, r0
 80005ce:	4203      	tst	r3, r0
 80005d0:	d00f      	beq.n	80005f2 <__swsetup_r+0xd6>
 80005d2:	2200      	movs	r2, #0
 80005d4:	60a2      	str	r2, [r4, #8]
 80005d6:	6962      	ldr	r2, [r4, #20]
 80005d8:	4252      	negs	r2, r2
 80005da:	61a2      	str	r2, [r4, #24]
 80005dc:	2000      	movs	r0, #0
 80005de:	6922      	ldr	r2, [r4, #16]
 80005e0:	4282      	cmp	r2, r0
 80005e2:	d1ba      	bne.n	800055a <__swsetup_r+0x3e>
 80005e4:	060a      	lsls	r2, r1, #24
 80005e6:	d5b8      	bpl.n	800055a <__swsetup_r+0x3e>
 80005e8:	2240      	movs	r2, #64	; 0x40
 80005ea:	4313      	orrs	r3, r2
 80005ec:	81a3      	strh	r3, [r4, #12]
 80005ee:	3801      	subs	r0, #1
 80005f0:	e7b3      	b.n	800055a <__swsetup_r+0x3e>
 80005f2:	0788      	lsls	r0, r1, #30
 80005f4:	d400      	bmi.n	80005f8 <__swsetup_r+0xdc>
 80005f6:	6962      	ldr	r2, [r4, #20]
 80005f8:	60a2      	str	r2, [r4, #8]
 80005fa:	e7ef      	b.n	80005dc <__swsetup_r+0xc0>
 80005fc:	20000000 	.word	0x20000000
 8000600:	08000de4 	.word	0x08000de4
 8000604:	08000e04 	.word	0x08000e04
 8000608:	08000dc4 	.word	0x08000dc4

0800060c <__sflush_r>:
 800060c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800060e:	898b      	ldrh	r3, [r1, #12]
 8000610:	0005      	movs	r5, r0
 8000612:	000c      	movs	r4, r1
 8000614:	071a      	lsls	r2, r3, #28
 8000616:	d45f      	bmi.n	80006d8 <__sflush_r+0xcc>
 8000618:	684a      	ldr	r2, [r1, #4]
 800061a:	2a00      	cmp	r2, #0
 800061c:	dc04      	bgt.n	8000628 <__sflush_r+0x1c>
 800061e:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8000620:	2a00      	cmp	r2, #0
 8000622:	dc01      	bgt.n	8000628 <__sflush_r+0x1c>
 8000624:	2000      	movs	r0, #0
 8000626:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000628:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800062a:	2f00      	cmp	r7, #0
 800062c:	d0fa      	beq.n	8000624 <__sflush_r+0x18>
 800062e:	2200      	movs	r2, #0
 8000630:	2180      	movs	r1, #128	; 0x80
 8000632:	682e      	ldr	r6, [r5, #0]
 8000634:	602a      	str	r2, [r5, #0]
 8000636:	001a      	movs	r2, r3
 8000638:	0149      	lsls	r1, r1, #5
 800063a:	400a      	ands	r2, r1
 800063c:	420b      	tst	r3, r1
 800063e:	d034      	beq.n	80006aa <__sflush_r+0x9e>
 8000640:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	075b      	lsls	r3, r3, #29
 8000646:	d506      	bpl.n	8000656 <__sflush_r+0x4a>
 8000648:	6863      	ldr	r3, [r4, #4]
 800064a:	1ac0      	subs	r0, r0, r3
 800064c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800064e:	2b00      	cmp	r3, #0
 8000650:	d001      	beq.n	8000656 <__sflush_r+0x4a>
 8000652:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000654:	1ac0      	subs	r0, r0, r3
 8000656:	0002      	movs	r2, r0
 8000658:	6a21      	ldr	r1, [r4, #32]
 800065a:	2300      	movs	r3, #0
 800065c:	0028      	movs	r0, r5
 800065e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8000660:	47b8      	blx	r7
 8000662:	89a1      	ldrh	r1, [r4, #12]
 8000664:	1c43      	adds	r3, r0, #1
 8000666:	d106      	bne.n	8000676 <__sflush_r+0x6a>
 8000668:	682b      	ldr	r3, [r5, #0]
 800066a:	2b1d      	cmp	r3, #29
 800066c:	d831      	bhi.n	80006d2 <__sflush_r+0xc6>
 800066e:	4a2c      	ldr	r2, [pc, #176]	; (8000720 <__sflush_r+0x114>)
 8000670:	40da      	lsrs	r2, r3
 8000672:	07d3      	lsls	r3, r2, #31
 8000674:	d52d      	bpl.n	80006d2 <__sflush_r+0xc6>
 8000676:	2300      	movs	r3, #0
 8000678:	6063      	str	r3, [r4, #4]
 800067a:	6923      	ldr	r3, [r4, #16]
 800067c:	6023      	str	r3, [r4, #0]
 800067e:	04cb      	lsls	r3, r1, #19
 8000680:	d505      	bpl.n	800068e <__sflush_r+0x82>
 8000682:	1c43      	adds	r3, r0, #1
 8000684:	d102      	bne.n	800068c <__sflush_r+0x80>
 8000686:	682b      	ldr	r3, [r5, #0]
 8000688:	2b00      	cmp	r3, #0
 800068a:	d100      	bne.n	800068e <__sflush_r+0x82>
 800068c:	6560      	str	r0, [r4, #84]	; 0x54
 800068e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000690:	602e      	str	r6, [r5, #0]
 8000692:	2900      	cmp	r1, #0
 8000694:	d0c6      	beq.n	8000624 <__sflush_r+0x18>
 8000696:	0023      	movs	r3, r4
 8000698:	3344      	adds	r3, #68	; 0x44
 800069a:	4299      	cmp	r1, r3
 800069c:	d002      	beq.n	80006a4 <__sflush_r+0x98>
 800069e:	0028      	movs	r0, r5
 80006a0:	f000 f9f2 	bl	8000a88 <_free_r>
 80006a4:	2000      	movs	r0, #0
 80006a6:	6360      	str	r0, [r4, #52]	; 0x34
 80006a8:	e7bd      	b.n	8000626 <__sflush_r+0x1a>
 80006aa:	2301      	movs	r3, #1
 80006ac:	0028      	movs	r0, r5
 80006ae:	6a21      	ldr	r1, [r4, #32]
 80006b0:	47b8      	blx	r7
 80006b2:	1c43      	adds	r3, r0, #1
 80006b4:	d1c5      	bne.n	8000642 <__sflush_r+0x36>
 80006b6:	682b      	ldr	r3, [r5, #0]
 80006b8:	2b00      	cmp	r3, #0
 80006ba:	d0c2      	beq.n	8000642 <__sflush_r+0x36>
 80006bc:	2b1d      	cmp	r3, #29
 80006be:	d001      	beq.n	80006c4 <__sflush_r+0xb8>
 80006c0:	2b16      	cmp	r3, #22
 80006c2:	d101      	bne.n	80006c8 <__sflush_r+0xbc>
 80006c4:	602e      	str	r6, [r5, #0]
 80006c6:	e7ad      	b.n	8000624 <__sflush_r+0x18>
 80006c8:	2340      	movs	r3, #64	; 0x40
 80006ca:	89a2      	ldrh	r2, [r4, #12]
 80006cc:	4313      	orrs	r3, r2
 80006ce:	81a3      	strh	r3, [r4, #12]
 80006d0:	e7a9      	b.n	8000626 <__sflush_r+0x1a>
 80006d2:	2340      	movs	r3, #64	; 0x40
 80006d4:	430b      	orrs	r3, r1
 80006d6:	e7fa      	b.n	80006ce <__sflush_r+0xc2>
 80006d8:	690f      	ldr	r7, [r1, #16]
 80006da:	2f00      	cmp	r7, #0
 80006dc:	d0a2      	beq.n	8000624 <__sflush_r+0x18>
 80006de:	680a      	ldr	r2, [r1, #0]
 80006e0:	600f      	str	r7, [r1, #0]
 80006e2:	1bd2      	subs	r2, r2, r7
 80006e4:	9201      	str	r2, [sp, #4]
 80006e6:	2200      	movs	r2, #0
 80006e8:	079b      	lsls	r3, r3, #30
 80006ea:	d100      	bne.n	80006ee <__sflush_r+0xe2>
 80006ec:	694a      	ldr	r2, [r1, #20]
 80006ee:	60a2      	str	r2, [r4, #8]
 80006f0:	9b01      	ldr	r3, [sp, #4]
 80006f2:	2b00      	cmp	r3, #0
 80006f4:	dc00      	bgt.n	80006f8 <__sflush_r+0xec>
 80006f6:	e795      	b.n	8000624 <__sflush_r+0x18>
 80006f8:	003a      	movs	r2, r7
 80006fa:	0028      	movs	r0, r5
 80006fc:	9b01      	ldr	r3, [sp, #4]
 80006fe:	6a21      	ldr	r1, [r4, #32]
 8000700:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000702:	47b0      	blx	r6
 8000704:	2800      	cmp	r0, #0
 8000706:	dc06      	bgt.n	8000716 <__sflush_r+0x10a>
 8000708:	2340      	movs	r3, #64	; 0x40
 800070a:	2001      	movs	r0, #1
 800070c:	89a2      	ldrh	r2, [r4, #12]
 800070e:	4240      	negs	r0, r0
 8000710:	4313      	orrs	r3, r2
 8000712:	81a3      	strh	r3, [r4, #12]
 8000714:	e787      	b.n	8000626 <__sflush_r+0x1a>
 8000716:	9b01      	ldr	r3, [sp, #4]
 8000718:	183f      	adds	r7, r7, r0
 800071a:	1a1b      	subs	r3, r3, r0
 800071c:	9301      	str	r3, [sp, #4]
 800071e:	e7e7      	b.n	80006f0 <__sflush_r+0xe4>
 8000720:	20400001 	.word	0x20400001

08000724 <_fflush_r>:
 8000724:	690b      	ldr	r3, [r1, #16]
 8000726:	b570      	push	{r4, r5, r6, lr}
 8000728:	0005      	movs	r5, r0
 800072a:	000c      	movs	r4, r1
 800072c:	2b00      	cmp	r3, #0
 800072e:	d102      	bne.n	8000736 <_fflush_r+0x12>
 8000730:	2500      	movs	r5, #0
 8000732:	0028      	movs	r0, r5
 8000734:	bd70      	pop	{r4, r5, r6, pc}
 8000736:	2800      	cmp	r0, #0
 8000738:	d004      	beq.n	8000744 <_fflush_r+0x20>
 800073a:	6983      	ldr	r3, [r0, #24]
 800073c:	2b00      	cmp	r3, #0
 800073e:	d101      	bne.n	8000744 <_fflush_r+0x20>
 8000740:	f000 f892 	bl	8000868 <__sinit>
 8000744:	4b14      	ldr	r3, [pc, #80]	; (8000798 <_fflush_r+0x74>)
 8000746:	429c      	cmp	r4, r3
 8000748:	d11b      	bne.n	8000782 <_fflush_r+0x5e>
 800074a:	686c      	ldr	r4, [r5, #4]
 800074c:	220c      	movs	r2, #12
 800074e:	5ea3      	ldrsh	r3, [r4, r2]
 8000750:	2b00      	cmp	r3, #0
 8000752:	d0ed      	beq.n	8000730 <_fflush_r+0xc>
 8000754:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000756:	07d2      	lsls	r2, r2, #31
 8000758:	d404      	bmi.n	8000764 <_fflush_r+0x40>
 800075a:	059b      	lsls	r3, r3, #22
 800075c:	d402      	bmi.n	8000764 <_fflush_r+0x40>
 800075e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000760:	f000 f923 	bl	80009aa <__retarget_lock_acquire_recursive>
 8000764:	0028      	movs	r0, r5
 8000766:	0021      	movs	r1, r4
 8000768:	f7ff ff50 	bl	800060c <__sflush_r>
 800076c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800076e:	0005      	movs	r5, r0
 8000770:	07db      	lsls	r3, r3, #31
 8000772:	d4de      	bmi.n	8000732 <_fflush_r+0xe>
 8000774:	89a3      	ldrh	r3, [r4, #12]
 8000776:	059b      	lsls	r3, r3, #22
 8000778:	d4db      	bmi.n	8000732 <_fflush_r+0xe>
 800077a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800077c:	f000 f916 	bl	80009ac <__retarget_lock_release_recursive>
 8000780:	e7d7      	b.n	8000732 <_fflush_r+0xe>
 8000782:	4b06      	ldr	r3, [pc, #24]	; (800079c <_fflush_r+0x78>)
 8000784:	429c      	cmp	r4, r3
 8000786:	d101      	bne.n	800078c <_fflush_r+0x68>
 8000788:	68ac      	ldr	r4, [r5, #8]
 800078a:	e7df      	b.n	800074c <_fflush_r+0x28>
 800078c:	4b04      	ldr	r3, [pc, #16]	; (80007a0 <_fflush_r+0x7c>)
 800078e:	429c      	cmp	r4, r3
 8000790:	d1dc      	bne.n	800074c <_fflush_r+0x28>
 8000792:	68ec      	ldr	r4, [r5, #12]
 8000794:	e7da      	b.n	800074c <_fflush_r+0x28>
 8000796:	46c0      	nop			; (mov r8, r8)
 8000798:	08000de4 	.word	0x08000de4
 800079c:	08000e04 	.word	0x08000e04
 80007a0:	08000dc4 	.word	0x08000dc4

080007a4 <std>:
 80007a4:	2300      	movs	r3, #0
 80007a6:	b510      	push	{r4, lr}
 80007a8:	0004      	movs	r4, r0
 80007aa:	6003      	str	r3, [r0, #0]
 80007ac:	6043      	str	r3, [r0, #4]
 80007ae:	6083      	str	r3, [r0, #8]
 80007b0:	8181      	strh	r1, [r0, #12]
 80007b2:	6643      	str	r3, [r0, #100]	; 0x64
 80007b4:	0019      	movs	r1, r3
 80007b6:	81c2      	strh	r2, [r0, #14]
 80007b8:	6103      	str	r3, [r0, #16]
 80007ba:	6143      	str	r3, [r0, #20]
 80007bc:	6183      	str	r3, [r0, #24]
 80007be:	2208      	movs	r2, #8
 80007c0:	305c      	adds	r0, #92	; 0x5c
 80007c2:	f7ff fdd1 	bl	8000368 <memset>
 80007c6:	4b05      	ldr	r3, [pc, #20]	; (80007dc <std+0x38>)
 80007c8:	6263      	str	r3, [r4, #36]	; 0x24
 80007ca:	4b05      	ldr	r3, [pc, #20]	; (80007e0 <std+0x3c>)
 80007cc:	6224      	str	r4, [r4, #32]
 80007ce:	62a3      	str	r3, [r4, #40]	; 0x28
 80007d0:	4b04      	ldr	r3, [pc, #16]	; (80007e4 <std+0x40>)
 80007d2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007d4:	4b04      	ldr	r3, [pc, #16]	; (80007e8 <std+0x44>)
 80007d6:	6323      	str	r3, [r4, #48]	; 0x30
 80007d8:	bd10      	pop	{r4, pc}
 80007da:	46c0      	nop			; (mov r8, r8)
 80007dc:	08000bfd 	.word	0x08000bfd
 80007e0:	08000c25 	.word	0x08000c25
 80007e4:	08000c5d 	.word	0x08000c5d
 80007e8:	08000c89 	.word	0x08000c89

080007ec <_cleanup_r>:
 80007ec:	b510      	push	{r4, lr}
 80007ee:	4902      	ldr	r1, [pc, #8]	; (80007f8 <_cleanup_r+0xc>)
 80007f0:	f000 f8ba 	bl	8000968 <_fwalk_reent>
 80007f4:	bd10      	pop	{r4, pc}
 80007f6:	46c0      	nop			; (mov r8, r8)
 80007f8:	08000725 	.word	0x08000725

080007fc <__sfmoreglue>:
 80007fc:	b570      	push	{r4, r5, r6, lr}
 80007fe:	2568      	movs	r5, #104	; 0x68
 8000800:	1e4a      	subs	r2, r1, #1
 8000802:	4355      	muls	r5, r2
 8000804:	000e      	movs	r6, r1
 8000806:	0029      	movs	r1, r5
 8000808:	3174      	adds	r1, #116	; 0x74
 800080a:	f000 f987 	bl	8000b1c <_malloc_r>
 800080e:	1e04      	subs	r4, r0, #0
 8000810:	d008      	beq.n	8000824 <__sfmoreglue+0x28>
 8000812:	2100      	movs	r1, #0
 8000814:	002a      	movs	r2, r5
 8000816:	6001      	str	r1, [r0, #0]
 8000818:	6046      	str	r6, [r0, #4]
 800081a:	300c      	adds	r0, #12
 800081c:	60a0      	str	r0, [r4, #8]
 800081e:	3268      	adds	r2, #104	; 0x68
 8000820:	f7ff fda2 	bl	8000368 <memset>
 8000824:	0020      	movs	r0, r4
 8000826:	bd70      	pop	{r4, r5, r6, pc}

08000828 <__sfp_lock_acquire>:
 8000828:	b510      	push	{r4, lr}
 800082a:	4802      	ldr	r0, [pc, #8]	; (8000834 <__sfp_lock_acquire+0xc>)
 800082c:	f000 f8bd 	bl	80009aa <__retarget_lock_acquire_recursive>
 8000830:	bd10      	pop	{r4, pc}
 8000832:	46c0      	nop			; (mov r8, r8)
 8000834:	20000094 	.word	0x20000094

08000838 <__sfp_lock_release>:
 8000838:	b510      	push	{r4, lr}
 800083a:	4802      	ldr	r0, [pc, #8]	; (8000844 <__sfp_lock_release+0xc>)
 800083c:	f000 f8b6 	bl	80009ac <__retarget_lock_release_recursive>
 8000840:	bd10      	pop	{r4, pc}
 8000842:	46c0      	nop			; (mov r8, r8)
 8000844:	20000094 	.word	0x20000094

08000848 <__sinit_lock_acquire>:
 8000848:	b510      	push	{r4, lr}
 800084a:	4802      	ldr	r0, [pc, #8]	; (8000854 <__sinit_lock_acquire+0xc>)
 800084c:	f000 f8ad 	bl	80009aa <__retarget_lock_acquire_recursive>
 8000850:	bd10      	pop	{r4, pc}
 8000852:	46c0      	nop			; (mov r8, r8)
 8000854:	2000008f 	.word	0x2000008f

08000858 <__sinit_lock_release>:
 8000858:	b510      	push	{r4, lr}
 800085a:	4802      	ldr	r0, [pc, #8]	; (8000864 <__sinit_lock_release+0xc>)
 800085c:	f000 f8a6 	bl	80009ac <__retarget_lock_release_recursive>
 8000860:	bd10      	pop	{r4, pc}
 8000862:	46c0      	nop			; (mov r8, r8)
 8000864:	2000008f 	.word	0x2000008f

08000868 <__sinit>:
 8000868:	b513      	push	{r0, r1, r4, lr}
 800086a:	0004      	movs	r4, r0
 800086c:	f7ff ffec 	bl	8000848 <__sinit_lock_acquire>
 8000870:	69a3      	ldr	r3, [r4, #24]
 8000872:	2b00      	cmp	r3, #0
 8000874:	d002      	beq.n	800087c <__sinit+0x14>
 8000876:	f7ff ffef 	bl	8000858 <__sinit_lock_release>
 800087a:	bd13      	pop	{r0, r1, r4, pc}
 800087c:	64a3      	str	r3, [r4, #72]	; 0x48
 800087e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8000880:	6523      	str	r3, [r4, #80]	; 0x50
 8000882:	4b13      	ldr	r3, [pc, #76]	; (80008d0 <__sinit+0x68>)
 8000884:	4a13      	ldr	r2, [pc, #76]	; (80008d4 <__sinit+0x6c>)
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	62a2      	str	r2, [r4, #40]	; 0x28
 800088a:	9301      	str	r3, [sp, #4]
 800088c:	42a3      	cmp	r3, r4
 800088e:	d101      	bne.n	8000894 <__sinit+0x2c>
 8000890:	2301      	movs	r3, #1
 8000892:	61a3      	str	r3, [r4, #24]
 8000894:	0020      	movs	r0, r4
 8000896:	f000 f81f 	bl	80008d8 <__sfp>
 800089a:	6060      	str	r0, [r4, #4]
 800089c:	0020      	movs	r0, r4
 800089e:	f000 f81b 	bl	80008d8 <__sfp>
 80008a2:	60a0      	str	r0, [r4, #8]
 80008a4:	0020      	movs	r0, r4
 80008a6:	f000 f817 	bl	80008d8 <__sfp>
 80008aa:	2200      	movs	r2, #0
 80008ac:	2104      	movs	r1, #4
 80008ae:	60e0      	str	r0, [r4, #12]
 80008b0:	6860      	ldr	r0, [r4, #4]
 80008b2:	f7ff ff77 	bl	80007a4 <std>
 80008b6:	2201      	movs	r2, #1
 80008b8:	2109      	movs	r1, #9
 80008ba:	68a0      	ldr	r0, [r4, #8]
 80008bc:	f7ff ff72 	bl	80007a4 <std>
 80008c0:	2202      	movs	r2, #2
 80008c2:	2112      	movs	r1, #18
 80008c4:	68e0      	ldr	r0, [r4, #12]
 80008c6:	f7ff ff6d 	bl	80007a4 <std>
 80008ca:	2301      	movs	r3, #1
 80008cc:	61a3      	str	r3, [r4, #24]
 80008ce:	e7d2      	b.n	8000876 <__sinit+0xe>
 80008d0:	08000dc0 	.word	0x08000dc0
 80008d4:	080007ed 	.word	0x080007ed

080008d8 <__sfp>:
 80008d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008da:	0007      	movs	r7, r0
 80008dc:	f7ff ffa4 	bl	8000828 <__sfp_lock_acquire>
 80008e0:	4b1f      	ldr	r3, [pc, #124]	; (8000960 <__sfp+0x88>)
 80008e2:	681e      	ldr	r6, [r3, #0]
 80008e4:	69b3      	ldr	r3, [r6, #24]
 80008e6:	2b00      	cmp	r3, #0
 80008e8:	d102      	bne.n	80008f0 <__sfp+0x18>
 80008ea:	0030      	movs	r0, r6
 80008ec:	f7ff ffbc 	bl	8000868 <__sinit>
 80008f0:	3648      	adds	r6, #72	; 0x48
 80008f2:	68b4      	ldr	r4, [r6, #8]
 80008f4:	6873      	ldr	r3, [r6, #4]
 80008f6:	3b01      	subs	r3, #1
 80008f8:	d504      	bpl.n	8000904 <__sfp+0x2c>
 80008fa:	6833      	ldr	r3, [r6, #0]
 80008fc:	2b00      	cmp	r3, #0
 80008fe:	d022      	beq.n	8000946 <__sfp+0x6e>
 8000900:	6836      	ldr	r6, [r6, #0]
 8000902:	e7f6      	b.n	80008f2 <__sfp+0x1a>
 8000904:	220c      	movs	r2, #12
 8000906:	5ea5      	ldrsh	r5, [r4, r2]
 8000908:	2d00      	cmp	r5, #0
 800090a:	d11a      	bne.n	8000942 <__sfp+0x6a>
 800090c:	0020      	movs	r0, r4
 800090e:	4b15      	ldr	r3, [pc, #84]	; (8000964 <__sfp+0x8c>)
 8000910:	3058      	adds	r0, #88	; 0x58
 8000912:	60e3      	str	r3, [r4, #12]
 8000914:	6665      	str	r5, [r4, #100]	; 0x64
 8000916:	f000 f847 	bl	80009a8 <__retarget_lock_init_recursive>
 800091a:	f7ff ff8d 	bl	8000838 <__sfp_lock_release>
 800091e:	0020      	movs	r0, r4
 8000920:	2208      	movs	r2, #8
 8000922:	0029      	movs	r1, r5
 8000924:	6025      	str	r5, [r4, #0]
 8000926:	60a5      	str	r5, [r4, #8]
 8000928:	6065      	str	r5, [r4, #4]
 800092a:	6125      	str	r5, [r4, #16]
 800092c:	6165      	str	r5, [r4, #20]
 800092e:	61a5      	str	r5, [r4, #24]
 8000930:	305c      	adds	r0, #92	; 0x5c
 8000932:	f7ff fd19 	bl	8000368 <memset>
 8000936:	6365      	str	r5, [r4, #52]	; 0x34
 8000938:	63a5      	str	r5, [r4, #56]	; 0x38
 800093a:	64a5      	str	r5, [r4, #72]	; 0x48
 800093c:	64e5      	str	r5, [r4, #76]	; 0x4c
 800093e:	0020      	movs	r0, r4
 8000940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000942:	3468      	adds	r4, #104	; 0x68
 8000944:	e7d7      	b.n	80008f6 <__sfp+0x1e>
 8000946:	2104      	movs	r1, #4
 8000948:	0038      	movs	r0, r7
 800094a:	f7ff ff57 	bl	80007fc <__sfmoreglue>
 800094e:	1e04      	subs	r4, r0, #0
 8000950:	6030      	str	r0, [r6, #0]
 8000952:	d1d5      	bne.n	8000900 <__sfp+0x28>
 8000954:	f7ff ff70 	bl	8000838 <__sfp_lock_release>
 8000958:	230c      	movs	r3, #12
 800095a:	603b      	str	r3, [r7, #0]
 800095c:	e7ef      	b.n	800093e <__sfp+0x66>
 800095e:	46c0      	nop			; (mov r8, r8)
 8000960:	08000dc0 	.word	0x08000dc0
 8000964:	ffff0001 	.word	0xffff0001

08000968 <_fwalk_reent>:
 8000968:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800096a:	0004      	movs	r4, r0
 800096c:	0006      	movs	r6, r0
 800096e:	2700      	movs	r7, #0
 8000970:	9101      	str	r1, [sp, #4]
 8000972:	3448      	adds	r4, #72	; 0x48
 8000974:	6863      	ldr	r3, [r4, #4]
 8000976:	68a5      	ldr	r5, [r4, #8]
 8000978:	9300      	str	r3, [sp, #0]
 800097a:	9b00      	ldr	r3, [sp, #0]
 800097c:	3b01      	subs	r3, #1
 800097e:	9300      	str	r3, [sp, #0]
 8000980:	d504      	bpl.n	800098c <_fwalk_reent+0x24>
 8000982:	6824      	ldr	r4, [r4, #0]
 8000984:	2c00      	cmp	r4, #0
 8000986:	d1f5      	bne.n	8000974 <_fwalk_reent+0xc>
 8000988:	0038      	movs	r0, r7
 800098a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800098c:	89ab      	ldrh	r3, [r5, #12]
 800098e:	2b01      	cmp	r3, #1
 8000990:	d908      	bls.n	80009a4 <_fwalk_reent+0x3c>
 8000992:	220e      	movs	r2, #14
 8000994:	5eab      	ldrsh	r3, [r5, r2]
 8000996:	3301      	adds	r3, #1
 8000998:	d004      	beq.n	80009a4 <_fwalk_reent+0x3c>
 800099a:	0029      	movs	r1, r5
 800099c:	0030      	movs	r0, r6
 800099e:	9b01      	ldr	r3, [sp, #4]
 80009a0:	4798      	blx	r3
 80009a2:	4307      	orrs	r7, r0
 80009a4:	3568      	adds	r5, #104	; 0x68
 80009a6:	e7e8      	b.n	800097a <_fwalk_reent+0x12>

080009a8 <__retarget_lock_init_recursive>:
 80009a8:	4770      	bx	lr

080009aa <__retarget_lock_acquire_recursive>:
 80009aa:	4770      	bx	lr

080009ac <__retarget_lock_release_recursive>:
 80009ac:	4770      	bx	lr
	...

080009b0 <__swhatbuf_r>:
 80009b0:	b570      	push	{r4, r5, r6, lr}
 80009b2:	000e      	movs	r6, r1
 80009b4:	001d      	movs	r5, r3
 80009b6:	230e      	movs	r3, #14
 80009b8:	5ec9      	ldrsh	r1, [r1, r3]
 80009ba:	0014      	movs	r4, r2
 80009bc:	b096      	sub	sp, #88	; 0x58
 80009be:	2900      	cmp	r1, #0
 80009c0:	da07      	bge.n	80009d2 <__swhatbuf_r+0x22>
 80009c2:	2300      	movs	r3, #0
 80009c4:	602b      	str	r3, [r5, #0]
 80009c6:	89b3      	ldrh	r3, [r6, #12]
 80009c8:	061b      	lsls	r3, r3, #24
 80009ca:	d411      	bmi.n	80009f0 <__swhatbuf_r+0x40>
 80009cc:	2380      	movs	r3, #128	; 0x80
 80009ce:	00db      	lsls	r3, r3, #3
 80009d0:	e00f      	b.n	80009f2 <__swhatbuf_r+0x42>
 80009d2:	466a      	mov	r2, sp
 80009d4:	f000 f984 	bl	8000ce0 <_fstat_r>
 80009d8:	2800      	cmp	r0, #0
 80009da:	dbf2      	blt.n	80009c2 <__swhatbuf_r+0x12>
 80009dc:	23f0      	movs	r3, #240	; 0xf0
 80009de:	9901      	ldr	r1, [sp, #4]
 80009e0:	021b      	lsls	r3, r3, #8
 80009e2:	4019      	ands	r1, r3
 80009e4:	4b05      	ldr	r3, [pc, #20]	; (80009fc <__swhatbuf_r+0x4c>)
 80009e6:	18c9      	adds	r1, r1, r3
 80009e8:	424b      	negs	r3, r1
 80009ea:	4159      	adcs	r1, r3
 80009ec:	6029      	str	r1, [r5, #0]
 80009ee:	e7ed      	b.n	80009cc <__swhatbuf_r+0x1c>
 80009f0:	2340      	movs	r3, #64	; 0x40
 80009f2:	2000      	movs	r0, #0
 80009f4:	6023      	str	r3, [r4, #0]
 80009f6:	b016      	add	sp, #88	; 0x58
 80009f8:	bd70      	pop	{r4, r5, r6, pc}
 80009fa:	46c0      	nop			; (mov r8, r8)
 80009fc:	ffffe000 	.word	0xffffe000

08000a00 <__smakebuf_r>:
 8000a00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000a02:	2602      	movs	r6, #2
 8000a04:	898b      	ldrh	r3, [r1, #12]
 8000a06:	0005      	movs	r5, r0
 8000a08:	000c      	movs	r4, r1
 8000a0a:	4233      	tst	r3, r6
 8000a0c:	d006      	beq.n	8000a1c <__smakebuf_r+0x1c>
 8000a0e:	0023      	movs	r3, r4
 8000a10:	3347      	adds	r3, #71	; 0x47
 8000a12:	6023      	str	r3, [r4, #0]
 8000a14:	6123      	str	r3, [r4, #16]
 8000a16:	2301      	movs	r3, #1
 8000a18:	6163      	str	r3, [r4, #20]
 8000a1a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8000a1c:	466a      	mov	r2, sp
 8000a1e:	ab01      	add	r3, sp, #4
 8000a20:	f7ff ffc6 	bl	80009b0 <__swhatbuf_r>
 8000a24:	9900      	ldr	r1, [sp, #0]
 8000a26:	0007      	movs	r7, r0
 8000a28:	0028      	movs	r0, r5
 8000a2a:	f000 f877 	bl	8000b1c <_malloc_r>
 8000a2e:	2800      	cmp	r0, #0
 8000a30:	d108      	bne.n	8000a44 <__smakebuf_r+0x44>
 8000a32:	220c      	movs	r2, #12
 8000a34:	5ea3      	ldrsh	r3, [r4, r2]
 8000a36:	059a      	lsls	r2, r3, #22
 8000a38:	d4ef      	bmi.n	8000a1a <__smakebuf_r+0x1a>
 8000a3a:	2203      	movs	r2, #3
 8000a3c:	4393      	bics	r3, r2
 8000a3e:	431e      	orrs	r6, r3
 8000a40:	81a6      	strh	r6, [r4, #12]
 8000a42:	e7e4      	b.n	8000a0e <__smakebuf_r+0xe>
 8000a44:	4b0f      	ldr	r3, [pc, #60]	; (8000a84 <__smakebuf_r+0x84>)
 8000a46:	62ab      	str	r3, [r5, #40]	; 0x28
 8000a48:	2380      	movs	r3, #128	; 0x80
 8000a4a:	89a2      	ldrh	r2, [r4, #12]
 8000a4c:	6020      	str	r0, [r4, #0]
 8000a4e:	4313      	orrs	r3, r2
 8000a50:	81a3      	strh	r3, [r4, #12]
 8000a52:	9b00      	ldr	r3, [sp, #0]
 8000a54:	6120      	str	r0, [r4, #16]
 8000a56:	6163      	str	r3, [r4, #20]
 8000a58:	9b01      	ldr	r3, [sp, #4]
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	d00d      	beq.n	8000a7a <__smakebuf_r+0x7a>
 8000a5e:	0028      	movs	r0, r5
 8000a60:	230e      	movs	r3, #14
 8000a62:	5ee1      	ldrsh	r1, [r4, r3]
 8000a64:	f000 f94e 	bl	8000d04 <_isatty_r>
 8000a68:	2800      	cmp	r0, #0
 8000a6a:	d006      	beq.n	8000a7a <__smakebuf_r+0x7a>
 8000a6c:	2203      	movs	r2, #3
 8000a6e:	89a3      	ldrh	r3, [r4, #12]
 8000a70:	4393      	bics	r3, r2
 8000a72:	001a      	movs	r2, r3
 8000a74:	2301      	movs	r3, #1
 8000a76:	4313      	orrs	r3, r2
 8000a78:	81a3      	strh	r3, [r4, #12]
 8000a7a:	89a0      	ldrh	r0, [r4, #12]
 8000a7c:	4307      	orrs	r7, r0
 8000a7e:	81a7      	strh	r7, [r4, #12]
 8000a80:	e7cb      	b.n	8000a1a <__smakebuf_r+0x1a>
 8000a82:	46c0      	nop			; (mov r8, r8)
 8000a84:	080007ed 	.word	0x080007ed

08000a88 <_free_r>:
 8000a88:	b570      	push	{r4, r5, r6, lr}
 8000a8a:	0005      	movs	r5, r0
 8000a8c:	2900      	cmp	r1, #0
 8000a8e:	d010      	beq.n	8000ab2 <_free_r+0x2a>
 8000a90:	1f0c      	subs	r4, r1, #4
 8000a92:	6823      	ldr	r3, [r4, #0]
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	da00      	bge.n	8000a9a <_free_r+0x12>
 8000a98:	18e4      	adds	r4, r4, r3
 8000a9a:	0028      	movs	r0, r5
 8000a9c:	f000 f958 	bl	8000d50 <__malloc_lock>
 8000aa0:	4a1d      	ldr	r2, [pc, #116]	; (8000b18 <_free_r+0x90>)
 8000aa2:	6813      	ldr	r3, [r2, #0]
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	d105      	bne.n	8000ab4 <_free_r+0x2c>
 8000aa8:	6063      	str	r3, [r4, #4]
 8000aaa:	6014      	str	r4, [r2, #0]
 8000aac:	0028      	movs	r0, r5
 8000aae:	f000 f957 	bl	8000d60 <__malloc_unlock>
 8000ab2:	bd70      	pop	{r4, r5, r6, pc}
 8000ab4:	42a3      	cmp	r3, r4
 8000ab6:	d908      	bls.n	8000aca <_free_r+0x42>
 8000ab8:	6821      	ldr	r1, [r4, #0]
 8000aba:	1860      	adds	r0, r4, r1
 8000abc:	4283      	cmp	r3, r0
 8000abe:	d1f3      	bne.n	8000aa8 <_free_r+0x20>
 8000ac0:	6818      	ldr	r0, [r3, #0]
 8000ac2:	685b      	ldr	r3, [r3, #4]
 8000ac4:	1841      	adds	r1, r0, r1
 8000ac6:	6021      	str	r1, [r4, #0]
 8000ac8:	e7ee      	b.n	8000aa8 <_free_r+0x20>
 8000aca:	001a      	movs	r2, r3
 8000acc:	685b      	ldr	r3, [r3, #4]
 8000ace:	2b00      	cmp	r3, #0
 8000ad0:	d001      	beq.n	8000ad6 <_free_r+0x4e>
 8000ad2:	42a3      	cmp	r3, r4
 8000ad4:	d9f9      	bls.n	8000aca <_free_r+0x42>
 8000ad6:	6811      	ldr	r1, [r2, #0]
 8000ad8:	1850      	adds	r0, r2, r1
 8000ada:	42a0      	cmp	r0, r4
 8000adc:	d10b      	bne.n	8000af6 <_free_r+0x6e>
 8000ade:	6820      	ldr	r0, [r4, #0]
 8000ae0:	1809      	adds	r1, r1, r0
 8000ae2:	1850      	adds	r0, r2, r1
 8000ae4:	6011      	str	r1, [r2, #0]
 8000ae6:	4283      	cmp	r3, r0
 8000ae8:	d1e0      	bne.n	8000aac <_free_r+0x24>
 8000aea:	6818      	ldr	r0, [r3, #0]
 8000aec:	685b      	ldr	r3, [r3, #4]
 8000aee:	1841      	adds	r1, r0, r1
 8000af0:	6011      	str	r1, [r2, #0]
 8000af2:	6053      	str	r3, [r2, #4]
 8000af4:	e7da      	b.n	8000aac <_free_r+0x24>
 8000af6:	42a0      	cmp	r0, r4
 8000af8:	d902      	bls.n	8000b00 <_free_r+0x78>
 8000afa:	230c      	movs	r3, #12
 8000afc:	602b      	str	r3, [r5, #0]
 8000afe:	e7d5      	b.n	8000aac <_free_r+0x24>
 8000b00:	6821      	ldr	r1, [r4, #0]
 8000b02:	1860      	adds	r0, r4, r1
 8000b04:	4283      	cmp	r3, r0
 8000b06:	d103      	bne.n	8000b10 <_free_r+0x88>
 8000b08:	6818      	ldr	r0, [r3, #0]
 8000b0a:	685b      	ldr	r3, [r3, #4]
 8000b0c:	1841      	adds	r1, r0, r1
 8000b0e:	6021      	str	r1, [r4, #0]
 8000b10:	6063      	str	r3, [r4, #4]
 8000b12:	6054      	str	r4, [r2, #4]
 8000b14:	e7ca      	b.n	8000aac <_free_r+0x24>
 8000b16:	46c0      	nop			; (mov r8, r8)
 8000b18:	20000084 	.word	0x20000084

08000b1c <_malloc_r>:
 8000b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b1e:	2303      	movs	r3, #3
 8000b20:	1ccd      	adds	r5, r1, #3
 8000b22:	439d      	bics	r5, r3
 8000b24:	3508      	adds	r5, #8
 8000b26:	0006      	movs	r6, r0
 8000b28:	2d0c      	cmp	r5, #12
 8000b2a:	d21f      	bcs.n	8000b6c <_malloc_r+0x50>
 8000b2c:	250c      	movs	r5, #12
 8000b2e:	42a9      	cmp	r1, r5
 8000b30:	d81e      	bhi.n	8000b70 <_malloc_r+0x54>
 8000b32:	0030      	movs	r0, r6
 8000b34:	f000 f90c 	bl	8000d50 <__malloc_lock>
 8000b38:	4925      	ldr	r1, [pc, #148]	; (8000bd0 <_malloc_r+0xb4>)
 8000b3a:	680a      	ldr	r2, [r1, #0]
 8000b3c:	0014      	movs	r4, r2
 8000b3e:	2c00      	cmp	r4, #0
 8000b40:	d11a      	bne.n	8000b78 <_malloc_r+0x5c>
 8000b42:	4f24      	ldr	r7, [pc, #144]	; (8000bd4 <_malloc_r+0xb8>)
 8000b44:	683b      	ldr	r3, [r7, #0]
 8000b46:	2b00      	cmp	r3, #0
 8000b48:	d104      	bne.n	8000b54 <_malloc_r+0x38>
 8000b4a:	0021      	movs	r1, r4
 8000b4c:	0030      	movs	r0, r6
 8000b4e:	f000 f843 	bl	8000bd8 <_sbrk_r>
 8000b52:	6038      	str	r0, [r7, #0]
 8000b54:	0029      	movs	r1, r5
 8000b56:	0030      	movs	r0, r6
 8000b58:	f000 f83e 	bl	8000bd8 <_sbrk_r>
 8000b5c:	1c43      	adds	r3, r0, #1
 8000b5e:	d12b      	bne.n	8000bb8 <_malloc_r+0x9c>
 8000b60:	230c      	movs	r3, #12
 8000b62:	0030      	movs	r0, r6
 8000b64:	6033      	str	r3, [r6, #0]
 8000b66:	f000 f8fb 	bl	8000d60 <__malloc_unlock>
 8000b6a:	e003      	b.n	8000b74 <_malloc_r+0x58>
 8000b6c:	2d00      	cmp	r5, #0
 8000b6e:	dade      	bge.n	8000b2e <_malloc_r+0x12>
 8000b70:	230c      	movs	r3, #12
 8000b72:	6033      	str	r3, [r6, #0]
 8000b74:	2000      	movs	r0, #0
 8000b76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b78:	6823      	ldr	r3, [r4, #0]
 8000b7a:	1b5b      	subs	r3, r3, r5
 8000b7c:	d419      	bmi.n	8000bb2 <_malloc_r+0x96>
 8000b7e:	2b0b      	cmp	r3, #11
 8000b80:	d903      	bls.n	8000b8a <_malloc_r+0x6e>
 8000b82:	6023      	str	r3, [r4, #0]
 8000b84:	18e4      	adds	r4, r4, r3
 8000b86:	6025      	str	r5, [r4, #0]
 8000b88:	e003      	b.n	8000b92 <_malloc_r+0x76>
 8000b8a:	6863      	ldr	r3, [r4, #4]
 8000b8c:	42a2      	cmp	r2, r4
 8000b8e:	d10e      	bne.n	8000bae <_malloc_r+0x92>
 8000b90:	600b      	str	r3, [r1, #0]
 8000b92:	0030      	movs	r0, r6
 8000b94:	f000 f8e4 	bl	8000d60 <__malloc_unlock>
 8000b98:	0020      	movs	r0, r4
 8000b9a:	2207      	movs	r2, #7
 8000b9c:	300b      	adds	r0, #11
 8000b9e:	1d23      	adds	r3, r4, #4
 8000ba0:	4390      	bics	r0, r2
 8000ba2:	1ac2      	subs	r2, r0, r3
 8000ba4:	4298      	cmp	r0, r3
 8000ba6:	d0e6      	beq.n	8000b76 <_malloc_r+0x5a>
 8000ba8:	1a1b      	subs	r3, r3, r0
 8000baa:	50a3      	str	r3, [r4, r2]
 8000bac:	e7e3      	b.n	8000b76 <_malloc_r+0x5a>
 8000bae:	6053      	str	r3, [r2, #4]
 8000bb0:	e7ef      	b.n	8000b92 <_malloc_r+0x76>
 8000bb2:	0022      	movs	r2, r4
 8000bb4:	6864      	ldr	r4, [r4, #4]
 8000bb6:	e7c2      	b.n	8000b3e <_malloc_r+0x22>
 8000bb8:	2303      	movs	r3, #3
 8000bba:	1cc4      	adds	r4, r0, #3
 8000bbc:	439c      	bics	r4, r3
 8000bbe:	42a0      	cmp	r0, r4
 8000bc0:	d0e1      	beq.n	8000b86 <_malloc_r+0x6a>
 8000bc2:	1a21      	subs	r1, r4, r0
 8000bc4:	0030      	movs	r0, r6
 8000bc6:	f000 f807 	bl	8000bd8 <_sbrk_r>
 8000bca:	1c43      	adds	r3, r0, #1
 8000bcc:	d1db      	bne.n	8000b86 <_malloc_r+0x6a>
 8000bce:	e7c7      	b.n	8000b60 <_malloc_r+0x44>
 8000bd0:	20000084 	.word	0x20000084
 8000bd4:	20000088 	.word	0x20000088

08000bd8 <_sbrk_r>:
 8000bd8:	2300      	movs	r3, #0
 8000bda:	b570      	push	{r4, r5, r6, lr}
 8000bdc:	4d06      	ldr	r5, [pc, #24]	; (8000bf8 <_sbrk_r+0x20>)
 8000bde:	0004      	movs	r4, r0
 8000be0:	0008      	movs	r0, r1
 8000be2:	602b      	str	r3, [r5, #0]
 8000be4:	f7ff fb36 	bl	8000254 <_sbrk>
 8000be8:	1c43      	adds	r3, r0, #1
 8000bea:	d103      	bne.n	8000bf4 <_sbrk_r+0x1c>
 8000bec:	682b      	ldr	r3, [r5, #0]
 8000bee:	2b00      	cmp	r3, #0
 8000bf0:	d000      	beq.n	8000bf4 <_sbrk_r+0x1c>
 8000bf2:	6023      	str	r3, [r4, #0]
 8000bf4:	bd70      	pop	{r4, r5, r6, pc}
 8000bf6:	46c0      	nop			; (mov r8, r8)
 8000bf8:	20000098 	.word	0x20000098

08000bfc <__sread>:
 8000bfc:	b570      	push	{r4, r5, r6, lr}
 8000bfe:	000c      	movs	r4, r1
 8000c00:	250e      	movs	r5, #14
 8000c02:	5f49      	ldrsh	r1, [r1, r5]
 8000c04:	f000 f8b4 	bl	8000d70 <_read_r>
 8000c08:	2800      	cmp	r0, #0
 8000c0a:	db03      	blt.n	8000c14 <__sread+0x18>
 8000c0c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8000c0e:	181b      	adds	r3, r3, r0
 8000c10:	6563      	str	r3, [r4, #84]	; 0x54
 8000c12:	bd70      	pop	{r4, r5, r6, pc}
 8000c14:	89a3      	ldrh	r3, [r4, #12]
 8000c16:	4a02      	ldr	r2, [pc, #8]	; (8000c20 <__sread+0x24>)
 8000c18:	4013      	ands	r3, r2
 8000c1a:	81a3      	strh	r3, [r4, #12]
 8000c1c:	e7f9      	b.n	8000c12 <__sread+0x16>
 8000c1e:	46c0      	nop			; (mov r8, r8)
 8000c20:	ffffefff 	.word	0xffffefff

08000c24 <__swrite>:
 8000c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c26:	001f      	movs	r7, r3
 8000c28:	898b      	ldrh	r3, [r1, #12]
 8000c2a:	0005      	movs	r5, r0
 8000c2c:	000c      	movs	r4, r1
 8000c2e:	0016      	movs	r6, r2
 8000c30:	05db      	lsls	r3, r3, #23
 8000c32:	d505      	bpl.n	8000c40 <__swrite+0x1c>
 8000c34:	230e      	movs	r3, #14
 8000c36:	5ec9      	ldrsh	r1, [r1, r3]
 8000c38:	2200      	movs	r2, #0
 8000c3a:	2302      	movs	r3, #2
 8000c3c:	f000 f874 	bl	8000d28 <_lseek_r>
 8000c40:	89a3      	ldrh	r3, [r4, #12]
 8000c42:	4a05      	ldr	r2, [pc, #20]	; (8000c58 <__swrite+0x34>)
 8000c44:	0028      	movs	r0, r5
 8000c46:	4013      	ands	r3, r2
 8000c48:	81a3      	strh	r3, [r4, #12]
 8000c4a:	0032      	movs	r2, r6
 8000c4c:	230e      	movs	r3, #14
 8000c4e:	5ee1      	ldrsh	r1, [r4, r3]
 8000c50:	003b      	movs	r3, r7
 8000c52:	f000 f81f 	bl	8000c94 <_write_r>
 8000c56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c58:	ffffefff 	.word	0xffffefff

08000c5c <__sseek>:
 8000c5c:	b570      	push	{r4, r5, r6, lr}
 8000c5e:	000c      	movs	r4, r1
 8000c60:	250e      	movs	r5, #14
 8000c62:	5f49      	ldrsh	r1, [r1, r5]
 8000c64:	f000 f860 	bl	8000d28 <_lseek_r>
 8000c68:	89a3      	ldrh	r3, [r4, #12]
 8000c6a:	1c42      	adds	r2, r0, #1
 8000c6c:	d103      	bne.n	8000c76 <__sseek+0x1a>
 8000c6e:	4a05      	ldr	r2, [pc, #20]	; (8000c84 <__sseek+0x28>)
 8000c70:	4013      	ands	r3, r2
 8000c72:	81a3      	strh	r3, [r4, #12]
 8000c74:	bd70      	pop	{r4, r5, r6, pc}
 8000c76:	2280      	movs	r2, #128	; 0x80
 8000c78:	0152      	lsls	r2, r2, #5
 8000c7a:	4313      	orrs	r3, r2
 8000c7c:	81a3      	strh	r3, [r4, #12]
 8000c7e:	6560      	str	r0, [r4, #84]	; 0x54
 8000c80:	e7f8      	b.n	8000c74 <__sseek+0x18>
 8000c82:	46c0      	nop			; (mov r8, r8)
 8000c84:	ffffefff 	.word	0xffffefff

08000c88 <__sclose>:
 8000c88:	b510      	push	{r4, lr}
 8000c8a:	230e      	movs	r3, #14
 8000c8c:	5ec9      	ldrsh	r1, [r1, r3]
 8000c8e:	f000 f815 	bl	8000cbc <_close_r>
 8000c92:	bd10      	pop	{r4, pc}

08000c94 <_write_r>:
 8000c94:	b570      	push	{r4, r5, r6, lr}
 8000c96:	0004      	movs	r4, r0
 8000c98:	0008      	movs	r0, r1
 8000c9a:	0011      	movs	r1, r2
 8000c9c:	001a      	movs	r2, r3
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	4d05      	ldr	r5, [pc, #20]	; (8000cb8 <_write_r+0x24>)
 8000ca2:	602b      	str	r3, [r5, #0]
 8000ca4:	f7ff fa8d 	bl	80001c2 <_write>
 8000ca8:	1c43      	adds	r3, r0, #1
 8000caa:	d103      	bne.n	8000cb4 <_write_r+0x20>
 8000cac:	682b      	ldr	r3, [r5, #0]
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	d000      	beq.n	8000cb4 <_write_r+0x20>
 8000cb2:	6023      	str	r3, [r4, #0]
 8000cb4:	bd70      	pop	{r4, r5, r6, pc}
 8000cb6:	46c0      	nop			; (mov r8, r8)
 8000cb8:	20000098 	.word	0x20000098

08000cbc <_close_r>:
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	b570      	push	{r4, r5, r6, lr}
 8000cc0:	4d06      	ldr	r5, [pc, #24]	; (8000cdc <_close_r+0x20>)
 8000cc2:	0004      	movs	r4, r0
 8000cc4:	0008      	movs	r0, r1
 8000cc6:	602b      	str	r3, [r5, #0]
 8000cc8:	f7ff fa97 	bl	80001fa <_close>
 8000ccc:	1c43      	adds	r3, r0, #1
 8000cce:	d103      	bne.n	8000cd8 <_close_r+0x1c>
 8000cd0:	682b      	ldr	r3, [r5, #0]
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	d000      	beq.n	8000cd8 <_close_r+0x1c>
 8000cd6:	6023      	str	r3, [r4, #0]
 8000cd8:	bd70      	pop	{r4, r5, r6, pc}
 8000cda:	46c0      	nop			; (mov r8, r8)
 8000cdc:	20000098 	.word	0x20000098

08000ce0 <_fstat_r>:
 8000ce0:	2300      	movs	r3, #0
 8000ce2:	b570      	push	{r4, r5, r6, lr}
 8000ce4:	4d06      	ldr	r5, [pc, #24]	; (8000d00 <_fstat_r+0x20>)
 8000ce6:	0004      	movs	r4, r0
 8000ce8:	0008      	movs	r0, r1
 8000cea:	0011      	movs	r1, r2
 8000cec:	602b      	str	r3, [r5, #0]
 8000cee:	f7ff fa8e 	bl	800020e <_fstat>
 8000cf2:	1c43      	adds	r3, r0, #1
 8000cf4:	d103      	bne.n	8000cfe <_fstat_r+0x1e>
 8000cf6:	682b      	ldr	r3, [r5, #0]
 8000cf8:	2b00      	cmp	r3, #0
 8000cfa:	d000      	beq.n	8000cfe <_fstat_r+0x1e>
 8000cfc:	6023      	str	r3, [r4, #0]
 8000cfe:	bd70      	pop	{r4, r5, r6, pc}
 8000d00:	20000098 	.word	0x20000098

08000d04 <_isatty_r>:
 8000d04:	2300      	movs	r3, #0
 8000d06:	b570      	push	{r4, r5, r6, lr}
 8000d08:	4d06      	ldr	r5, [pc, #24]	; (8000d24 <_isatty_r+0x20>)
 8000d0a:	0004      	movs	r4, r0
 8000d0c:	0008      	movs	r0, r1
 8000d0e:	602b      	str	r3, [r5, #0]
 8000d10:	f7ff fa8b 	bl	800022a <_isatty>
 8000d14:	1c43      	adds	r3, r0, #1
 8000d16:	d103      	bne.n	8000d20 <_isatty_r+0x1c>
 8000d18:	682b      	ldr	r3, [r5, #0]
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	d000      	beq.n	8000d20 <_isatty_r+0x1c>
 8000d1e:	6023      	str	r3, [r4, #0]
 8000d20:	bd70      	pop	{r4, r5, r6, pc}
 8000d22:	46c0      	nop			; (mov r8, r8)
 8000d24:	20000098 	.word	0x20000098

08000d28 <_lseek_r>:
 8000d28:	b570      	push	{r4, r5, r6, lr}
 8000d2a:	0004      	movs	r4, r0
 8000d2c:	0008      	movs	r0, r1
 8000d2e:	0011      	movs	r1, r2
 8000d30:	001a      	movs	r2, r3
 8000d32:	2300      	movs	r3, #0
 8000d34:	4d05      	ldr	r5, [pc, #20]	; (8000d4c <_lseek_r+0x24>)
 8000d36:	602b      	str	r3, [r5, #0]
 8000d38:	f7ff fa80 	bl	800023c <_lseek>
 8000d3c:	1c43      	adds	r3, r0, #1
 8000d3e:	d103      	bne.n	8000d48 <_lseek_r+0x20>
 8000d40:	682b      	ldr	r3, [r5, #0]
 8000d42:	2b00      	cmp	r3, #0
 8000d44:	d000      	beq.n	8000d48 <_lseek_r+0x20>
 8000d46:	6023      	str	r3, [r4, #0]
 8000d48:	bd70      	pop	{r4, r5, r6, pc}
 8000d4a:	46c0      	nop			; (mov r8, r8)
 8000d4c:	20000098 	.word	0x20000098

08000d50 <__malloc_lock>:
 8000d50:	b510      	push	{r4, lr}
 8000d52:	4802      	ldr	r0, [pc, #8]	; (8000d5c <__malloc_lock+0xc>)
 8000d54:	f7ff fe29 	bl	80009aa <__retarget_lock_acquire_recursive>
 8000d58:	bd10      	pop	{r4, pc}
 8000d5a:	46c0      	nop			; (mov r8, r8)
 8000d5c:	20000090 	.word	0x20000090

08000d60 <__malloc_unlock>:
 8000d60:	b510      	push	{r4, lr}
 8000d62:	4802      	ldr	r0, [pc, #8]	; (8000d6c <__malloc_unlock+0xc>)
 8000d64:	f7ff fe22 	bl	80009ac <__retarget_lock_release_recursive>
 8000d68:	bd10      	pop	{r4, pc}
 8000d6a:	46c0      	nop			; (mov r8, r8)
 8000d6c:	20000090 	.word	0x20000090

08000d70 <_read_r>:
 8000d70:	b570      	push	{r4, r5, r6, lr}
 8000d72:	0004      	movs	r4, r0
 8000d74:	0008      	movs	r0, r1
 8000d76:	0011      	movs	r1, r2
 8000d78:	001a      	movs	r2, r3
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	4d05      	ldr	r5, [pc, #20]	; (8000d94 <_read_r+0x24>)
 8000d7e:	602b      	str	r3, [r5, #0]
 8000d80:	f7ff fa02 	bl	8000188 <_read>
 8000d84:	1c43      	adds	r3, r0, #1
 8000d86:	d103      	bne.n	8000d90 <_read_r+0x20>
 8000d88:	682b      	ldr	r3, [r5, #0]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d000      	beq.n	8000d90 <_read_r+0x20>
 8000d8e:	6023      	str	r3, [r4, #0]
 8000d90:	bd70      	pop	{r4, r5, r6, pc}
 8000d92:	46c0      	nop			; (mov r8, r8)
 8000d94:	20000098 	.word	0x20000098

08000d98 <_init>:
 8000d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d9a:	46c0      	nop			; (mov r8, r8)
 8000d9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d9e:	bc08      	pop	{r3}
 8000da0:	469e      	mov	lr, r3
 8000da2:	4770      	bx	lr

08000da4 <_fini>:
 8000da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da6:	46c0      	nop			; (mov r8, r8)
 8000da8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000daa:	bc08      	pop	{r3}
 8000dac:	469e      	mov	lr, r3
 8000dae:	4770      	bx	lr
